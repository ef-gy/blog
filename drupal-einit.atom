<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>eINIT</title><subtitle>the Unix Event Management System</subtitle><updated>2009-02-19T00:40:18Z</updated><link rel="self" href="drupal-einit"/><id/>
<entry><title>eINIT Core</title><updated>2008-01-02T03:54:12Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::1:1</id><summary>This is eINIT's core, which consists of the base core functinality (events, thread and memory management), the in-core .so module loader as well as a number of ...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>eINIT Core</title><meta name="date" content="2008-01-02T03:54:12Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-02T03:54:12Z"/><meta name="unix:name" content="einit:einit-core"/><meta name="description" content="This is eINIT's core, which consists of the base core functinality (events, thread and memory management), the in-core .so module loader as well as a number of ..."/><meta name="category" content="Project Description"/></head><body><p>This is eINIT's core, which consists of the base core functinality (events, thread and memory management), the in-core .so module loader as well as a number of semi-optional modules, ranging from elementary things like /dev handling and the XML/sh module support, to intermediate tasks like mounting and network management to more advanced modules such as distribution helpers.</p></body></html></content><category term="Project Description"/><category term="einit.org"/></entry>
<entry><title>eINIT Core 0.25.3</title><updated>2008-02-25T23:17:30Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::2:2</id><summary>Notes: This version is an interim release in preparation of 0.26.0. It includes most stability fixes and a number of enhancements. Merry christmas ;) Changes: N...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>eINIT Core 0.25.3</title><meta name="date" content="2008-02-25T23:17:30Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-02-25T23:17:30Z"/><meta name="unix:name" content="einit:einit-core-0.25.3"/><meta name="description" content="Notes: This version is an interim release in preparation of 0.26.0. It includes most stability fixes and a number of enhancements. Merry christmas ;) Changes: N..."/><meta name="category" content="Project Release"/></head><body><p>Notes: This version is an interim release in preparation of 0.26.0. It includes most stability fixes and a number of enhancements. Merry christmas ;) Changes: New in this version:</p><ul><li>modules-scheme-guile: [experimental]</li><li>internal bootchart support:</li><li>static /dev</li><li>mdev</li><li>edev [experimental]</li><li>support for psplash</li><li>support for usplash</li><li>support for exquisite [experimental]</li><li>support for qingy (support had already been provided, but now we</li><li>sysv-style terminal initialisation</li><li>regexes are faster now, since they get cached</li><li>xml/sh modules that claim to will not get</li><li>some internal data structures were rewritten to have less</li><li>the module-logics core has been rewritten and should now be a</li><li>threads get pooled, which may decrease thread usage</li><li>lockups in pexec() have been fixed</li></ul><p>this allows writing einit core modules in scheme (which has more features and is heaps faster than bash/sh)</p><p>this is actually a wee bit faster than the bootchart daemon supplied with the bootchart package itself... so, in a way the results should be more accurate We've also introduced support for different /dev handlers:</p><p>nifty for embedded devices and servers</p><p>slick and small</p><p>more features than mdev, but less than udev; but it should be faster than udev, so, it's an interesting tradeoff Eye candy; eINIT now supports psplash-ish splash daemons:</p><p>(exqusitie is the psplash replacement using EFL libraries) Other changes:</p><p>include templates that we've tested)</p><p>registered at all if the needed files aren't present</p><p>overhead (not that they had much before...) Fixes:</p><p>bit more stable than it used to</p><p>+ various other things that came up since 0.25.0</p></body></html></content><category term="Project Release"/><category term="einit.org"/></entry>
<entry><title>eINIT XML/sh Modules</title><updated>2008-01-02T03:54:00Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::3:3</id><summary>These are modules for eINIT written in the .xml configuration file format.</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>eINIT XML/sh Modules</title><meta name="date" content="2008-01-02T03:54:00Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-02T03:54:00Z"/><meta name="unix:name" content="einit:einit-xml-sh-modules"/><meta name="description" content="These are modules for eINIT written in the .xml configuration file format."/><meta name="category" content="Project Description"/></head><body><p>These are modules for eINIT written in the .xml configuration file format.</p></body></html></content><category term="Project Description"/><category term="einit.org"/></entry>
<entry><title>eINIT XML/sh Modules 0.75.0</title><updated>2008-01-02T03:52:58Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::4:4</id><summary>Updated XML/sh modules for eINIT 0.23.5. You need these.</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>eINIT XML/sh Modules 0.75.0</title><meta name="date" content="2008-01-02T03:52:58Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-02T03:52:58Z"/><meta name="unix:name" content="einit:einit-xml-sh-modules-0.75.0"/><meta name="description" content="Updated XML/sh modules for eINIT 0.23.5. You need these."/><meta name="category" content="Project Release"/></head><body><p>Updated XML/sh modules for eINIT 0.23.5. You need these.</p></body></html></content><category term="Project Release"/><category term="einit.org"/></entry>
<entry><title>Main Page</title><updated>2008-02-26T00:13:52Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::5:5</id><summary>well, this is a wiki aight so someone go fill it up :D Note Feel free to edit these pages if you have anything to add. Seriously, I mean it. Changes - ((Migrati...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Main Page</title><meta name="date" content="2008-02-26T00:13:52Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-02-26T00:13:52Z"/><meta name="unix:name" content="einit:main-page"/><meta name="description" content="well, this is a wiki aight so someone go fill it up :D Note Feel free to edit these pages if you have anything to add. Seriously, I mean it. Changes - ((Migrati..."/><meta name="category" content="Page"/></head><body><p>well, this is a wiki aight so someone go fill it up :D</p><h2>Note</h2><p>Feel free to edit these pages if you have anything to add. Seriously, I mean it.</p><h2>Changes</h2><ul><li><a href="einit:migration-guide,-0.25.x-series-to-0.40.0">Migration Guide, 0.25.x series to 0.40.0</a></li></ul><h2>Useful Information</h2><ul><li><a href="einit:faq">FAQ</a></li><li><a href="einit:os-distro-architecture-compatibility">OS/Distro/Architecture Compatibility</a></li><li><a href="einit:roadmap">Roadmap</a></li></ul><h2>This site needs</h2><ul><li><a href="Documentation" rel="need-lookup">Documentation</a>, which should contain:</li><ul><li>a proper <a href="einit:installation-walkthrough">Installation Walkthrough</a></li></ul><ul><li>useful Help and Advice</li></ul></ul><h2>Documentation</h2><ul><li><a href="Users Guide" rel="need-lookup">Users Guide</a></li><li><a href="Developers Guide" rel="need-lookup">Developers Guide</a></li></ul></body></html></content><category term="Page"/><category term="einit.org"/></entry>
<entry><title>OS/Distro/Architecture Compatibility</title><updated>2008-01-06T03:13:04Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::6:6</id><summary>This page contains a list of all the linux distributions that have been tested with eINIT and the stability status as well as cpu architectures that eINIT is kn...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>OS/Distro/Architecture Compatibility</title><meta name="date" content="2008-01-06T03:13:04Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-06T03:13:04Z"/><meta name="unix:name" content="einit:os-distro-architecture-compatibility"/><meta name="description" content="This page contains a list of all the linux distributions that have been tested with eINIT and the stability status as well as cpu architectures that eINIT is kn..."/><meta name="category" content="Page"/></head><body><p>This page contains a list of all the linux distributions that have been tested with eINIT and the stability status as well as cpu architectures that eINIT is known to build against.</p><h1>x86-pc-linux-gnu; x86_64-pc-linux-gnu</h1><h2>Gentoo/Linux</h2><ul><li>works well</li><li>has packages; the ebuild in portage has minor issues, layman overlay 'einit' is needed.</li></ul><h2>Frugalware 0.7_rc2</h2><ul><li>einit boots, but the modules need adjustments</li><li>no packages</li></ul><h2>Ubuntu 7.04</h2><ul><li>einit boots, but the modules need adjustments</li><li>no packages; cokehabit is working on those</li></ul><h1>ppc-apple-darwin-libc</h1><ul><li>einit works as intended in a sandbox</li><li>no actual attempts at booting into einit have been made</li></ul><h1>ppc-unknown-linux-gnu</h1><h2>Gentoo/Linux</h2><ul><li>works well</li><li>has packages; the ebuild in portage has minor issues, layman overlay 'einit' is needed.</li></ul><h1>sh4-unknown-linux-gnu; sh4-unknown-linux-uclibc</h1><ul><li>einit is reported to have alignment issues</li><li>none of the developers actually have this type of hardware... we're looking into hacking up old sega dreamcasts</li></ul><h1>arm-unknown-linux-gnu; armeb-unknown-linux-gnu</h1><ul><li>older versions of einit are reported to compile and work in sandbox mode on at least familiar and gentoo/linux</li><li>no actual attempts at booting into einit have been made</li></ul><h1>arm-unknown-linux-uclibc; armeb-unknown-linux-uclibc</h1><ul><li>no tests have been made with -uclibc, but einit is assumed to have threading issues</li><li>no actual attempts at booting into einit have been made</li></ul><h1>x86-pc-freebsd-libc</h1><ul><li>einit is known to compile and work in sandbox mode</li><li>no actual attempts at booting into einit have been made</li></ul></body></html></content><category term="Page"/><category term="einit.org"/></entry>
<entry><title>User's Guide</title><updated>2008-01-06T01:21:06Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::7:7</id><summary>This is for additions/errata to the ((http://einit.jyujin.de/documentation/html/index.html docbook version)) of the User's Guide. New to eINIT? You should have ...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>User's Guide</title><meta name="date" content="2008-01-06T01:21:06Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-06T01:21:06Z"/><meta name="unix:name" content="einit:user's-guide"/><meta name="description" content="This is for additions/errata to the ((http://einit.jyujin.de/documentation/html/index.html docbook version)) of the User's Guide. New to eINIT? You should have ..."/><meta name="category" content="Book"/></head><body><p>This is for additions/errata to the</p><a href="http://einit.jyujin.de/documentation/html/index.html docbook version" rel="need-lookup">http://einit.jyujin.de/documentation/html/index.html docbook version</a><p>of the User's Guide.</p><h2>New to eINIT?</h2><p>You should have a look at this:</p><ul><li><a href="einit:installation-walkthrough">Installation Walkthrough</a></li><li><a href="einit:how-to-use-einit-control-erc-power">How to use einit-control/erc/power</a></li></ul><h2>See Also</h2><ul><li><a href="http://einit.jyujin.de/documentation/html/index.html docbook version" rel="need-lookup">http://einit.jyujin.de/documentation/html/index.html docbook version</a></li></ul></body></html></content><category term="Book"/><category term="einit.org"/></entry>
<entry><title>Developer's Guide</title><updated>2008-01-20T13:45:33Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::8:8</id><summary>This is for additions/errata to the ((http://einit.jyujin.de/documentation/html/index.html docbook version)) of the Developer's Guide. Needed Pages - ((Writing ...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Developer's Guide</title><meta name="date" content="2008-01-20T13:45:33Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-20T13:45:33Z"/><meta name="unix:name" content="einit:developer's-guide"/><meta name="description" content="This is for additions/errata to the ((http://einit.jyujin.de/documentation/html/index.html docbook version)) of the Developer's Guide. Needed Pages - ((Writing ..."/><meta name="category" content="Book"/></head><body><p>This is for additions/errata to the</p><a href="http://einit.jyujin.de/documentation/html/index.html docbook version" rel="need-lookup">http://einit.jyujin.de/documentation/html/index.html docbook version</a><p>of the Developer's Guide.</p><h2>Needed Pages</h2><ul><li><a href="Writing XML/sh modules" rel="need-lookup">Writing XML/sh modules</a></li></ul><h2>See Also</h2><ul><li><a href="http://einit.jyujin.de/documentation/html/index.html docbook version" rel="need-lookup">http://einit.jyujin.de/documentation/html/index.html docbook version</a></li></ul></body></html></content><category term="Book"/><category term="einit.org"/></entry>
<entry><title>FAQ</title><updated>2008-04-04T21:21:42Z</updated><author><name>Joshua Michael Keyes</name><email>stable.entropy@gmail.com</email></author><id>drupal:drupal-einit::9:9</id><summary>Just how 'beta' is this? Will it kill my filesystems? Not /that/ beta no more. And there's never been any reports of any actual filesystem corruption, even with...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>FAQ</title><meta name="date" content="2008-04-04T21:21:42Z"/><meta name="author" content="Joshua Michael Keyes"/><meta name="mtime" content="2008-04-04T21:21:42Z"/><meta name="unix:name" content="einit:faq"/><meta name="description" content="Just how 'beta' is this? Will it kill my filesystems? Not /that/ beta no more. And there's never been any reports of any actual filesystem corruption, even with..."/><meta name="category" content="Page"/></head><body><h2>Just how 'beta' is this? Will it kill my filesystems?</h2><p>Not /that/ beta no more. And there's never been any reports of any actual filesystem corruption, even with the really old 'alpha' versions. Still it might have weird errors, but we tend to fix them ASAP.</p><h2>Sometimes eINIT tells me that not all filesystems unmounted cleanly, but dmesg indicates that in fact they did. What is this?</h2><p>That's because eINIT's mounter-module wasn't able to umount something or re-mount it read-only. That does, however, not mean that the filesystems wouldn't be unmounted before shutting down or rebooting. DON'T PANIC. The only way you'll see dirty filesystems is when eINIT actually crashes while shutting down, even if it does tell you it couldn't unmount some filesystem or another, it's almost guaranteed to unmount it before sending the actual shutdown/reboot command, and here's why:</p><p>After all modules are disabled (including filesystem modules), eINIT will execute the program /lib/einit/bin/last-rites. This program will mount a ramdisk, make that the current root filesystem, kill everything but itself and the kernel and disable all loopback devices, then unmount everything in /proc/mounts (or at least remount things read-only, depending on which of these the kernel thinks appropriate). To put it simple, using this method it's almost impossible that something couldn't unmount cleanly. Because this addon program really is killing just about everything, it's making sure nothing is in use and it's thus able to unmount just about everything.</p><p>So, in essence, before thinking something wouldn't have unmounted cleanly, PLEASE CONSULT YOUR DMESG OUTPUT. If something's been mounted that hasn't been cleanly unmounted before, dmesg WILL tell you about it.</p><h2>Do I *really* need to manually edit XML files?</h2><p>Unfortunately, yes. At this point we haven't created a CLI, TUI or GUI interface to do this for your yet, but that doesn't mean we're not going to create one. It's just that right now we'd rather make sure stuff works, and not creating a dead-easy configuration tool has the advantage that the whole project is more likely to only attract more tech-savvy users, or at least users that are likely to RTFM. Once things stabilise a bit, we'll of course add an easy-to-use configuration tool. XML should make that really easy, too.</p><p>XML files aren't that hard once you get the hang of it tho. And, of course, if you create a configuration tool yourself, feel free to tell us and we'll likely include it in the upstream release or provide links to it. ;)</p><h2>How do I set this up?</h2><h2>It's installed, what now?</h2><p>Please have a look at the</p><a href="einit:installation-walkthrough">Installation Walkthrough</a><p>.</p><h2>Will this work on Windows?</h2><p>Nah, that's unlikely. I don't even have a Windows box that I could work on, and I'm not planning on getting one either since Windows is way too complicated and pricey imho. And even if I had a devel machine for this, then I still doubt that Windows' kernel is actually using an init programme, or one that is easy to override or replace without some serious Registry-Foo(tm). I guess if some Microsoft employee would feel the urge to convince me of the opposite and then tell me how the corresponding parts of the kernel work, then there might well be a Windows port, but that's about as unlikely as me getting an actual Windows machine to work on.</p><h2>Does eINIT support framebuffer splash utilities?</h2><p>At the moment, no, but support for it is planned.</p><h2>Unanswered Questions (feel free to add yours)</h2><ul><li>How do I write new services?</li></ul></body></html></content><category term="Page"/><category term="einit.org"/></entry>




<entry><title>Network Settings</title><updated>2008-01-06T01:05:55Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::14:14</id><summary>A sample network.xml file einit prefix"configuration-network" hostname s"localhost"/ domainname s"local"/ interfaces lo control"none" ip"iproute2" address"127.0...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Network Settings</title><meta name="date" content="2008-01-06T01:05:55Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-06T01:05:55Z"/><meta name="unix:name" content="einit:network-settings"/><meta name="description" content="A sample network.xml file einit prefix&quot;configuration-network&quot; hostname s&quot;localhost&quot;/ domainname s&quot;local&quot;/ interfaces lo control&quot;none&quot; ip&quot;iproute2&quot; address&quot;127.0..."/><meta name="category" content="Page"/></head><body><h2>A sample network.xml file</h2><p>&lt;einit prefix="configuration-network"&gt; &lt;hostname s="localhost"/&gt; &lt;domainname s="local"/&gt; &lt;interfaces&gt; &lt;lo control="none" ip="iproute2" address="127.0.0.1/8" network="127.0.0.0/8" /&gt; &lt;eth0 kernel-module="e1000" control="none" ip="pump"/&gt; &lt;wlan0 kernel-module="ipw3945" control="wpa_supplicant" driver="wext" config="/etc/wpa_supplicant/wpa_supplicant.conf" ip="dhcpcd"/&gt; &lt;ppp0 control="wvdial" profile="m610"/&gt; &lt;eth1 control="none" ip="iproute2" address="192.168.0.3/24" network="192.168.0.0/24" gateway="192.168.0.1" /&gt; &lt;/interfaces&gt; &lt;/einit&gt;</p><h2>Constructing interfaces</h2><p>Interfaces are constructed with the following syntax:</p><p>&lt;'interface' kernel-module="'interface_kernel_module'" control="'interface_controller'" ip="'ip_manager'" /&gt;</p><p>Where...</p><ul><li>'interface' is the interface you are setting up (eg. lo, eth1, wlan0, ath1)</li><li>'interface_kernel_module' is the the kernel module for the interface (eg. ndiswrapper, ipw2200, e100)</li><li>'interface_controller' is the the application which establishes a network link (eg. iwconfig, wpa_supplicant, wvdial)</li><li>'ip_manager' is the application used to assign/receive an IP address (eg. dhcpcd, pump, iproute2)</li></ul><p>Any component of an interface that requires extra config options should add them within the &lt;'interface' /&gt; element One example of such a component is the 'iproute2' ip-manager, which in our example is used for eth1 and lo. Its attributes are:</p><ul><li>'address', which is the network interface's address. you can use CIDR notation if you want to skip the network= attr, or just to be on the safe side.</li><li>'network' is your network-mask/network specifier. best to use CIDR notation here.</li><li>'gateway' is the gateway to use on this interface.</li></ul><h2>Note</h2><p>This syntax is going to be obsolete in einit 0.26.0, where the network-v2 module will be introduced. For network-v2, there is a new configuration format. See</p><a href="einit:network-settings-v2">Network Settings (V2)</a><p>.</p></body></html></content><category term="Page"/><category term="einit.org"/></entry>
<entry><title>Installation Walkthrough</title><updated>2008-01-02T16:44:17Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::15:15</id><summary>So you wanna give eINIT a shot but don't know where to start, eh? Well, this shouldn't be too hard, provided you're not afraid of xml! Step 1: Choose your Distr...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Installation Walkthrough</title><meta name="date" content="2008-01-02T16:44:17Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-02T16:44:17Z"/><meta name="unix:name" content="einit:installation-walkthrough"/><meta name="description" content="So you wanna give eINIT a shot but don't know where to start, eh? Well, this shouldn't be too hard, provided you're not afraid of xml! Step 1: Choose your Distr..."/><meta name="category" content="Page"/></head><body><p>So you wanna give eINIT a shot but don't know where to start, eh? Well, this shouldn't be too hard, provided you're not afraid of xml!</p><h2>Step 1: Choose your Distribution</h2><p>Hey, this is an init, it's distro-specific by nature.</p><ul><li><a href="einit:installing-einit-on-gentoo-linux">Installing eINIT on Gentoo/Linux</a></li><li><a href="einit:installing-einit-manually">Installing eINIT manually</a></li></ul><hr/><p>Once you have completed installing eINIT, you will also need to do these additional steps:</p><ul><li><a href="einit:configuring-einit">Configuring eINIT</a></li><li><a href="einit:configuring-your-bootloader-to-use-einit">Configuring your Bootloader to use eINIT</a></li></ul></body></html></content><category term="Page"/><category term="einit.org"/></entry>
<entry><title>Installing eINIT on Gentoo/Linux</title><updated>2008-04-25T03:43:10Z</updated><author><name>Leonardo Valeri Manera</name><email>lvalerimanera@gmail.com</email></author><id>drupal:drupal-einit::16:16</id><summary>Goody, Gentoo/Linux is pretty much the easiest way to get this bugger installed. Step 2: Educating your Package Manager to use eINIT's overlay The upstream ebui...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Installing eINIT on Gentoo/Linux</title><meta name="date" content="2008-04-25T03:43:10Z"/><meta name="author" content="Leonardo Valeri Manera"/><meta name="mtime" content="2008-04-25T03:43:10Z"/><meta name="unix:name" content="einit:installing-einit-on-gentoo-linux"/><meta name="description" content="Goody, Gentoo/Linux is pretty much the easiest way to get this bugger installed. Step 2: Educating your Package Manager to use eINIT's overlay The upstream ebui..."/><meta name="category" content="Page"/></head><body><p>Goody, Gentoo/Linux is pretty much the easiest way to get this bugger installed.</p><h2>Step 2: Educating your Package Manager to use eINIT's overlay</h2><p>The upstream ebuilds are kinda outdated, and the important(!) einit-modules-xml package is missing too, so you want to use the overlay here.</p><h3>Step 2a: Portage + Layman</h3><p>First, make sure Layman is installed. Hint: emerge layman, then edit /etc/make.conf to contain this at the end of the file: source /usr/portage/local/layman/make.conf</p><p>Now add the layman overlay: layman -L layman -a einit</p><p>If you're a good boy and not running ~arch, you will first need to modify /etc/portage/package.keywords so that it contains the lines... sys-apps/einit ~arch sys-apps/einit-modules-xml ~arch (where 'arch' is the architecture you're on. if in doubt, use ~x86).</p><h3>Step 2b: Paludis</h3><p>###############/etc/paludis/repositories/einit.conf#################### location = /var/paludis/repositories/einit sync = git://git.jyujin.de/einit/portage-overlay.git master_repository = gentoo format = ebuild names_cache = /var/cache/paludis/names write_cache = /var/cache/paludis/metadata #######################################################################</p><ul><li>just paste the lines between the ## lines to a new file called: /etc/paludis/repositories/einit.conf</li><li>if the directory /var/paludis/repositories doesn't exist create it with: </li><li>don't create the last directory (einit) within /var/paludis/repositories otherwise git won't clone</li></ul><p># mkdir -p /var/paludis/repositories **and chown it as: # chown -R paludisbuild:paludisbuild /var/paludis</p><ul><li>next unmask keywords:</li></ul><p># echo "sys-apps/einit ~arch" &gt;&gt; /etc/paludis/keywords.conf # echo "sys-apps/einit-modules-xml ~arch" &gt;&gt; /etc/paludis/keywords.conf</p><h2>Step 3: Installation</h2><p>If you're using portage, you need to do an emerge einit einit-modules-xml For paludis, do this instead: # paludis -i einit einit-modules-xml That will install eINIT and the packages it needs.</p><h3>Notes</h3><ul><li>You need to have guile emerged with the 'threads' USE flag</li><li>eINIT's git ebuilds have two special USE flags: 'testing' and 'stable'. These two select the 'testing'/'stable' GIT branches, respectively. By default the ebuild will use the 'master' branch.</li></ul><h3>Helpers</h3><ul><li>If you (optionally) install 'rnv' off the overlay, the 'einit --wtf' output will be enhanced with details on syntactic and semantic errors in .xml configuration files. You don't strictly need rnv, but it does help at times.</li></ul><h2>Step 4: Configure eINIT</h2><p>Once you're done installing eINIT, head over to</p><a href="einit:configuring-einit">Configuring eINIT</a><p>.</p></body></html></content><category term="Page"/><category term="einit.org"/></entry>
<entry><title>Configuring eINIT</title><updated>2008-01-16T20:44:41Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::17:17</id><summary>Step 4: Configure eINIT This is easier than it used to be. For a quick run just examine the files in /etc/einit and /etc/einit/conf.d. (Required) Set up your Ne...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Configuring eINIT</title><meta name="date" content="2008-01-16T20:44:41Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-16T20:44:41Z"/><meta name="unix:name" content="einit:configuring-einit"/><meta name="description" content="Step 4: Configure eINIT This is easier than it used to be. For a quick run just examine the files in /etc/einit and /etc/einit/conf.d. (Required) Set up your Ne..."/><meta name="category" content="Page"/></head><body><h2>Step 4: Configure eINIT</h2><p>This is easier than it used to be. For a quick run just examine the files in /etc/einit and /etc/einit/conf.d.</p><h3>(Required) Set up your Network</h3><p>Check out /etc/einit/network.xml for some idea of how this works. Each node in the &lt;interfaces&gt; section will create a service net-&lt;something&gt;.</p><ul><li>(stable releases only! git versions handle this on their own) Once you're done with that file (don't forget about setting your host- and domainname!), head over to /etc/einit/local.xml and scroll down to where it has that &lt;network /&gt; element. You'll have to adjust this to reflect actual network services, for example you should change the default group="net-eth0" to group="net-wlan0" if you're main network card doesn't show up as eth0. Or you might want to modify that to read group="net-eth0:net-wlan0" if you use both eth0 and wlan0.</li></ul><p>See also these in-depth Guides:</p><ul><li><a href="einit:network-settings">Network Settings</a> (for current stable versions of eINIT)</li><li><a href="einit:network-settings-v2">Network Settings (V2)</a> (for the latest GIT versions of eINIT)</li><li><a href="Service Groups" rel="need-lookup">Service Groups</a></li></ul><h3>(Required Examine /etc/einit/modes.xml</h3><p>Here's where you set up what services eINIT should start. Just look at the &lt;enable /&gt; elements in the &lt;mode /&gt; elements.</p><p>In recent GIT versions we changed the default behaviour of "just adding the typical services" to "just adding the really needed services", so now you'll definitely want to edit the list of services to enable.</p><h3>(Optional) Edit /etc/einit/fstab.xml</h3><p>The file's format should be rather straightforward. This step is usually optional, unless you need to do some magic before/after mounting or unmounting your filesystems. By default eINIT will use /etc/fstab, so if your computer is already set up, you should be good to go.</p><h2>Step 5: Run 'einit --wtf'!</h2><p>We really mean it! Do run this command now and every time you updated your configuration, it'll tell you if something's wrong or you did a common mistake somewhere.</p><h2>Step 6: Configuring your Bootloader</h2><p>Once you're done with your configuration files, head over to</p><a href="einit:configuring-your-bootloader-to-use-einit">Configuring your Bootloader to use eINIT</a><p>.</p></body></html></content><category term="Page"/><category term="einit.org"/></entry>
<entry><title>Configuring your Bootloader to use eINIT</title><updated>2008-01-29T01:55:39Z</updated><author><name>nklein</name><email>nadjak227@gmx.net</email></author><id>drupal:drupal-einit::18:18</id><summary>Step 6: Configuring your Bootloader You need to tell your Bootloader about eINIT, so that it can tell your kernel to use eINIT instead of the default init. GRUB...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Configuring your Bootloader to use eINIT</title><meta name="date" content="2008-01-29T01:55:39Z"/><meta name="author" content="nklein"/><meta name="mtime" content="2008-01-29T01:55:39Z"/><meta name="unix:name" content="einit:configuring-your-bootloader-to-use-einit"/><meta name="description" content="Step 6: Configuring your Bootloader You need to tell your Bootloader about eINIT, so that it can tell your kernel to use eINIT instead of the default init. GRUB..."/><meta name="category" content="Page"/></head><body><h2>Step 6: Configuring your Bootloader</h2><p>You need to tell your Bootloader about eINIT, so that it can tell your kernel to use eINIT instead of the default init.</p><h3>GRUB</h3><p>First, open up your grub config file (usually /boot/grub/grub.conf or /boot/grub/menu.lst) and find your current entry... it might look something like this: title Gentoo (Linux/amd64) root (hd0,0) kernel /kernel-2.6.18-gentoo-r4 root=/dev/sda7 initrd /boot/splash</p><p>Now, COPY this to a new entry and add 'init=/sbin/einit' to the kernel command line, like so: title Gentoo (Linux/amd64) [eINIT] root (hd0,0) kernel /kernel-2.6.18-gentoo-r4 root=/dev/sda7 init=/sbin/einit initrd /boot/splash</p><p>See, that wasn't too hard now was it?</p><h4>Gentoo + Genkernel Users</h4><p>Instead of adding 'init=/sbin/einit', you'll have to add 'REAL_INIT=/sbin/einit' to the kernel command line, so that the whole block looks something like this:</p><p>title Gentoo (Linux/x86) [eINIT, genkernel] root (hd0,0) kernel /kernel-genkernel-x86-2.6.23-gentoo-r3 real_root=/dev/sda7 REAL_INIT=/sbin/einit initrd /initramfs-genkernel-x86-2.6.23-gentoo-r3</p><h4>Sabayon Users</h4><p>Try accel_init=/sbin/einit.</p><h3>LILO</h3><p>Open your LILO config file (usually /etc/lilo.conf) and look for your current entry which might look like this:</p><p>image=/boot/vmlinuz-2.6.22-gentoo-r8 label=gentoo root=/dev/sda3 initrd=/boot/kernel-2.6.22-gentoo-r8</p><p>COPY this to a new entry and add 'append="init=/sbin/einit"'. The new block might look like this:</p><p>image=/boot/vmlinuz-2.6.22-gentoo-r8 label=gentoo-einit root=/dev/sda3 initrd=/boot/kernel-2.6.22-gentoo-r8 append="init=/sbin/einit"</p><hr/><p>Congratulations! You're done. Now go boot into eINIT and see if it works. If it worked fine, or if you'd like to kick one of the devs' nuts, just drop by on</p><a href="einit:irc">IRC</a><p>.</p></body></html></content><category term="Page"/><category term="einit.org"/></entry>
<entry><title>IRC</title><updated>2008-01-02T16:42:16Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::19:19</id><summary>Having issues that aren't documented? Want to harrass one of the devs? Praise kittens? Talk dirty? IRC's your friend! Grab your favourite IRC client and join us...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>IRC</title><meta name="date" content="2008-01-02T16:42:16Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-02T16:42:16Z"/><meta name="unix:name" content="einit:irc"/><meta name="description" content="Having issues that aren't documented? Want to harrass one of the devs? Praise kittens? Talk dirty? IRC's your friend! Grab your favourite IRC client and join us..."/><meta name="category" content="Page"/></head><body><p>Having issues that aren't documented? Want to harrass one of the devs? Praise kittens? Talk dirty? IRC's your friend! Grab your favourite IRC client and join us 'ere: [irc://irc.freenode.org#einit].</p><p>Server: irc.freenode.org Channel: #einit</p></body></html></content><category term="Page"/><category term="einit.org"/></entry>
<entry><title>That's it, we're leaving Berlios</title><updated>2008-01-10T02:07:59Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::64:64</id><summary>Berlios was getting on my nerves big time, so I've set up a new drupal on my private server. I've updated the installation guide while I was at it, which should...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>That's it, we're leaving Berlios</title><meta name="date" content="2008-01-10T02:07:59Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-10T02:07:59Z"/><meta name="unix:name" content="einit:that's-it,-we're-leaving-berlios"/><meta name="description" content="Berlios was getting on my nerves big time, so I've set up a new drupal on my private server. I've updated the installation guide while I was at it, which should..."/><meta name="category" content="Blog Post"/></head><body><p>Berlios was getting on my nerves big time, so I've set up a new drupal on my private server. I've updated the installation guide while I was at it, which should help y'all a bit. The Issue tracker finally works again, so please populate it with lots of issues and features requests and all that :D.</p><p>Oh, the wiki is fairly public too, just sign up and add stuff, or edit stuff, it's up to you.</p><p>One last word: The old accounts haven't been ported over, nor has most of the content, so please just sign up again. It's free, all you need is to answer a simple maths captcha and the E-Mail address that is required to sign up isn't verified or anything either.</p></body></html></content><category term="Blog Post"/><category term="einit.org"/></entry>

<entry><title>eINIT Scheme Modules</title><updated>2008-01-02T22:48:08Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::22:22</id><summary>More power than the XML/sh modules, faster and less segmentation fault blues than with writing stuff in C. Hey, functional programming pwnz :D.</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>eINIT Scheme Modules</title><meta name="date" content="2008-01-02T22:48:08Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-02T22:48:08Z"/><meta name="unix:name" content="einit:einit-scheme-modules"/><meta name="description" content="More power than the XML/sh modules, faster and less segmentation fault blues than with writing stuff in C. Hey, functional programming pwnz :D."/><meta name="category" content="Project Description"/></head><body><p>More power than the XML/sh modules, faster and less segmentation fault blues than with writing stuff in C. Hey, functional programming pwnz :D.</p></body></html></content><category term="Project Description"/><category term="einit.org"/></entry>


























<entry><title>How to use einit-control/erc/power</title><updated>2008-01-06T01:22:05Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::51:51</id><summary>Once you actually got eINIT to boot, you'll probably want to talk with eINIT in some way; here's how: einit-control Interacting with eINIT is usually done by us...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>How to use einit-control/erc/power</title><meta name="date" content="2008-01-06T01:22:05Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-06T01:22:05Z"/><meta name="unix:name" content="einit:how-to-use-einit-control-erc-power"/><meta name="description" content="Once you actually got eINIT to boot, you'll probably want to talk with eINIT in some way; here's how: einit-control Interacting with eINIT is usually done by us..."/><meta name="category" content="Page"/></head><body><p>Once you actually got eINIT to boot, you'll probably want to talk with eINIT in some way; here's how:</p><h2>einit-control</h2><p>Interacting with eINIT is usually done by using the 'einit-control' program. Basically this program just sends raw IPC commands to eINIT and then patiently waits for a response.</p><p>Note that, by default you need to be either root or a member of the "einit" group on your computer to use these commands.</p><h3>erc</h3><p>This is a symlink to einit-control, and it's usually used to either change modes or to enable/disable modules. It's used like this:</p><ul><li>If you wanted to switch to the default mode, you'd use this command:</li></ul><p>erc switch-mode default</p><ul><li>If you wanted to enable some service, like 'dbus', use this:</li></ul><p>erc dbus enable</p><ul><li>Same for disabling services... let's say you wanted to disable the 'cron' service:</li></ul><p>erc cron disable</p><p>NOTE: using 'erc &lt;something&gt;' is exactly the same as using 'einit-control rc &lt;something&gt;'.</p><h3>power</h3><p>Of course you want to be able to shut down or reboot your computer, don't you?</p><ul><li>shut down:</li></ul><p>power off</p><ul><li>reboot:</li></ul><p>power reset</p><p>NOTE: using 'power &lt;something&gt;' is exactly the same as using 'einit-control power &lt;something&gt;'.</p><h3>Miscellaneous Commands</h3><p>This is kinda helpful if you want to write your own .xml/sh modules:</p><ul><li>make eINIT re-read its configuration files (IF it has changed):</li></ul><p>einit-control update configuration</p><ul><li>make eINIT read a new configuration file:</li></ul><p>einit-control update configuration /path/to/new/file.xml</p><ul><li>list all the modules eINIT currently knows:</li></ul><p>einit-control list modules</p><ul><li>list all services that eINIT currently knows:</li></ul><p>einit-control list services</p></body></html></content><category term="Page"/><category term="einit.org"/></entry>
<entry><title>Installing eINIT manually</title><updated>2008-02-17T14:10:26Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::52:52</id><summary>Well, this might hurt a bit, but not too much :D. Step 2: Get the sources Yeah that's right, first you need to get the sources somewhere. This part isn't too ha...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Installing eINIT manually</title><meta name="date" content="2008-02-17T14:10:26Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-02-17T14:10:26Z"/><meta name="unix:name" content="einit:installing-einit-manually"/><meta name="description" content="Well, this might hurt a bit, but not too much :D. Step 2: Get the sources Yeah that's right, first you need to get the sources somewhere. This part isn't too ha..."/><meta name="category" content="Page"/></head><body><p>Well, this might hurt a bit, but not too much :D.</p><h2>Step 2: Get the sources</h2><p>Yeah that's right, first you need to get the sources somewhere. This part isn't too hard, though, either grab the einit-&lt;version&gt;.tar.bz2 and einit-modules-xml-&lt;version&gt;.tar.bz2 off einit.org's frontpage, or use git.</p><h3>Step 2a: Unpack the tarballs</h3><p>Just drop the .tar.bz2 files into your favourite directory, then run:</p><p>tar xjf einit-&lt;version&gt;.tar.bz2 tar xjf einit-modules-xml-&lt;version&gt;.tar.bz2</p><p>This should create two directories: einit-&lt;version&gt;/ and einit-modules-xml-&lt;version&gt;/</p><h3>Step 2b: Get the things you need via git</h3><p>First, make sure GIT is actually installed. Then do this:</p><p>git clone git://git.einit.org/core.git git clone git://git.einit.org/modules/xml-sh.git</p><p>This will create two directories: core/ and xml-sh/.</p><h2>Step 3: Compile and Install</h2><p>NOTE: before trying to install, create a group called 'einit' on your box! NOTE.2: there is no manual "make uninstall"! eINIT's build scripts are designed to work with a package manager, so... if you installed manually and want to remove eINIT again, just rm -R /lib/*einit* /usr/include/einit* /sbin/einit* /bin/einit* /bin/rc /bin/power</p><h3>Step 3.1: Stuff you'll need</h3><p>Yes, it won't just work like that, you'll need a couple things:</p><ul><li>gcc</li></ul><p>On Linux you need...</p><ul><li>glibc with NPTL(!) (if you don't know if you have this, and your distro is recent, then you do have it)</li></ul><p>Also, depending on which branch you choose:</p><ul><li>master</li><li>make (gnu's version would be best i guess)</li><li>expat headers (look for something like libexpat1-dev in *buntu)</li><li>testing</li><li>scons</li></ul><h3>Step 3.2: The Core</h3><h4>'master' branch</h4><p>First, cd to the core's directory (either einit-&lt;version&gt;/ or core/). Then configure the sources, like so:</p><p>./configure --prefix=/</p><p>Now the sources should be ready to get compiled, to do that, you issue this command:</p><p>make</p><p>If this ran through, you need to install the sources (you'll need root access for this, and you need to have a group called 'einit' on your machine!)</p><p>make install</p><p>That's it, core installed.</p><h4>'testing' branch</h4><p>This is why we love scons:</p><p>scons scons install</p><p>if you'd like to set a prefix or destdir, use 'prefix=' or 'destdir=' on both command-lines.</p><h4>Troubleshooting</h4><p>If you get weird errors about sockaddr_nl, you should disable some modules. To do that, edit configure.options and search for module names that caused the issue. That's probably linux-edev, linux-mdev, linux-static-dev and linux-hotplug.</p><p>Or, use the testing branch.</p><h3>Step 3.3: The XML/sh Modules</h3><p>This is easier. Again, cd to the right directory (this time, it's either xml-sh/ or einit-modules-xml-&lt;version&gt;/). Then run this command:</p><p>scons install</p><p>(that's a space between install and '/', as well as another space between '/' and 'lib'!)</p><p>This syntax looks weird, eh? Well, there's a simple explanation here: The install script needs to know the prefix you used for ./configure up above, and it needs to know the libdir-base (which is usually either 'lib' or 'lib64' on 64-bit machines).</p><h2>Step 4: Configure eINIT</h2><p>Once you're done installing eINIT, head over to</p><a href="einit:configuring-einit">Configuring eINIT</a><p>.</p></body></html></content><category term="Page"/><category term="einit.org"/></entry>

<entry><title>HowTos</title><updated>2008-01-06T01:53:10Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::54:54</id><summary/><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>HowTos</title><meta name="date" content="2008-01-06T01:53:10Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-06T01:53:10Z"/><meta name="unix:name" content="einit:howtos"/><meta name="description" content=""/><meta name="category" content="Page"/></head><body/></html></content><category term="Page"/><category term="einit.org"/></entry>
<entry><title>In-Depth Information</title><updated>2008-01-22T00:35:01Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::55:55</id><summary>There's lots of stuff that is usually hidden "under the hood" in eINIT, and all of this should be documented... so let's start by listing the fun features. Need...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>In-Depth Information</title><meta name="date" content="2008-01-22T00:35:01Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-22T00:35:01Z"/><meta name="unix:name" content="einit:in-depth-information"/><meta name="description" content="There's lots of stuff that is usually hidden &quot;under the hood&quot; in eINIT, and all of this should be documented... so let's start by listing the fun features. Need..."/><meta name="category" content="Page"/></head><body><p>There's lots of stuff that is usually hidden "under the hood" in eINIT, and all of this should be documented... so let's start by listing the fun features.</p><h3>Needed Guides</h3><ul><li><a href="Service Groups" rel="need-lookup">Service Groups</a></li><li><a href="Checkpoints" rel="need-lookup">Checkpoints</a> allow waiting on services of a base mode before doing things in another mode.</li></ul></body></html></content><category term="Page"/><category term="einit.org"/></entry>
<entry><title>SysV-Style TTY Initialisation</title><updated>2008-01-06T01:12:41Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::56:56</id><summary>By default, eINIT will bring up TTYs as soon as it possibly can, which is right after making sure /dev (and /proc, /sys on Linux) is around, and / is writable. ...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>SysV-Style TTY Initialisation</title><meta name="date" content="2008-01-06T01:12:41Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-06T01:12:41Z"/><meta name="unix:name" content="einit:sysv-style-tty-initialisation"/><meta name="description" content="By default, eINIT will bring up TTYs as soon as it possibly can, which is right after making sure /dev (and /proc, /sys on Linux) is around, and / is writable. ..."/><meta name="category" content="Page"/></head><body><p>By default, eINIT will bring up TTYs as soon as it possibly can, which is right after making sure /dev (and /proc, /sys on Linux) is around, and / is writable. This may cause issues in certain setups, for example if you have a separate /usr, and you'd like to use 'Qingy' instead of a plain (a)getty. To help with this, there's an option to make eINIT behave like SysV inits concerning when to initialise TTYs.</p><p>Consider this expert from a modes.xml file: &lt;einit&gt; &lt;!-- snip --&gt; &lt;mode id="default" base="boot"&gt; &lt;enable services="audio:alsa:portmap:sshd:mpd:displaymanager:v-kdm" /&gt; &lt;overrides&gt; &lt;ttys s="tty1-regular:tty2-qingy:tty3-qingy:tty4-qingy:tty5-qingy:tty6-regular" /&gt; &lt;/overrides&gt; &lt;/mode&gt; &lt;!-- snip --&gt; &lt;/einit&gt;</p><p>Notice the &lt;ttys /&gt; element: In this example, the user is using a mix of getty and qingy TTYs. In order to make sure qingy is being brought up late enough for everything to be just fine, one might modify this line: &lt;ttys s="tty1-regular:tty2-qingy:tty3-qingy:tty4-qingy:tty5-qingy:tty6-regular" /&gt; to look like this: &lt;ttys s="tty1-regular:tty2-qingy:tty3-qingy:tty4-qingy:tty5-qingy:tty6-regular" sysv-style="yes" /&gt;</p><p>This makes sure that the TTYs get brought up _after_ the switch to the default mode is complete, which is equivalent to what sysvinit is doing.</p></body></html></content><category term="Page"/><category term="einit.org"/></entry>
<entry><title>How to use Qingy</title><updated>2008-01-06T01:19:54Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::57:57</id><summary>Agetty is neither exciting nor pretty in any way, but there's alternatives to this. One such example is "qingy", which allows pretty graphics on your login scre...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>How to use Qingy</title><meta name="date" content="2008-01-06T01:19:54Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-06T01:19:54Z"/><meta name="unix:name" content="einit:how-to-use-qingy"/><meta name="description" content="Agetty is neither exciting nor pretty in any way, but there's alternatives to this. One such example is &quot;qingy&quot;, which allows pretty graphics on your login scre..."/><meta name="category" content="Page"/></head><body><p>Agetty is neither exciting nor pretty in any way, but there's alternatives to this. One such example is "qingy", which allows pretty graphics on your login screen, and it also allows managing more than one X session on the same host, unlike displaymanagers such as XDM, GDM, KDM or entrance.</p><p>To use Qingy, make sure it is installed, then open up your /etc/modes.xml: &lt;einit&gt; &lt;!-- snip --&gt; &lt;mode id="default" base="boot"&gt; &lt;enable services="audio:alsa:portmap:sshd:mpd:displaymanager:v-kdm" /&gt; &lt;overrides&gt; &lt;ttys s="tty1-regular:tty2-regular:tty3-regular:tty4-regular:tty5-regular:tty6-regular" /&gt; &lt;/overrides&gt; &lt;/mode&gt; &lt;!-- snip --&gt; &lt;/einit&gt;</p><p>Notice this line: &lt;ttys s="tty1-regular:tty2-regular:tty3-regular:tty4-regular:tty5-regular:tty6-regular" /&gt;</p><p>This is the line that controls your TTYs, and the above example is the default configuration. Notice the pattern: it's a lot of ttyX-regular identifiers separated by colons. ttyX-regular is basically just agetty. to use qingy, you'd substitute ttyX-qingy, like so: &lt;ttys s="tty1-qingy:tty2-qingy:tty3-qingy:tty4-qingy:tty5-qingy:tty6-regular" /&gt;</p><p>This will put qingy on tty1-tty5 and leave a plain old agetty on tty6 (well, you never know...). You're free to mix TTYs in any way you see fit, but by default only TTYs for tty1 to tty6 are defined, if you need more, edit /etc/einit/subsystems.d/tty.xml to add more.</p></body></html></content><category term="Page"/><category term="einit.org"/></entry>
<entry><title>How to use CPUFreq</title><updated>2008-01-06T01:36:46Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::58:58</id><summary>On mobile computers, you'll probably want to boot fast, but then make sure the CPU will tone down a bit. For this there's a set of utilities in Linux called 'cp...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>How to use CPUFreq</title><meta name="date" content="2008-01-06T01:36:46Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-06T01:36:46Z"/><meta name="unix:name" content="einit:how-to-use-cpufreq"/><meta name="description" content="On mobile computers, you'll probably want to boot fast, but then make sure the CPU will tone down a bit. For this there's a set of utilities in Linux called 'cp..."/><meta name="category" content="Page"/></head><body><p>On mobile computers, you'll probably want to boot fast, but then make sure the CPU will tone down a bit. For this there's a set of utilities in Linux called 'cpufrequtils', which allow setting specific governors that get to work out when to put the CPU in full power mode or when to reduce power in order to conserve battery power. eINIT has built-in support for talking to the kernel directly in order to change CPU governors, and here's how you use this:</p><p>Let's look at an example /etc/einit/conf.d/cpufreq.xml file first: &lt;einit&gt; &lt;configuration&gt; &lt;linux&gt; &lt;cpufreq cpus="2" in-switch="performance" post-switch="ondemand" /&gt; &lt;/linux&gt; &lt;/configuration&gt; &lt;/einit&gt;</p><p>This file is basically the same as the default /etc/einit/conf.d/cpufreq.xml file that ships with eINIT, just with the actual contents uncommented. The important element here is this one: &lt;cpufreq cpus="2" in-switch="performance" post-switch="ondemand" /&gt;</p><p>In this example, eINIT is instructed to set the governors for the first two cpus with the cpus="" attribute. It is further instructed to set the governor to "performance" while eINIT is switching modes (i.e. booting, shutting down, etc), and once no more such switches are happening (= the system is fully booted), it is instructed to switch the controlled CPUs to the "ondemand" governor. This is actually the default behaviour; for example you might also want to use this setting: &lt;cpufreq cpus="2" in-switch="performance" post-switch="performance" /&gt;</p><p>Here, eINIT will always set the governor to "performance" on the controlled CPUs.</p><p>If you want to disable this control completely, use this setting: &lt;cpufreq cpus="0" /&gt;</p><h2>Note</h2><p>You do NOT need to have the cpufreq utils installed for this control to work. You only need to have everything configured properly in your kernel.</p></body></html></content><category term="Page"/><category term="einit.org"/></entry>
<entry><title>Roadmap</title><updated>2008-02-27T12:05:46Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::59:59</id><summary>Well, this is definitely going to need more Structure, so let's start by making a good, old-fashioned Roadmap! Version 0.50.0 - CLI Editor for configuration fil...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Roadmap</title><meta name="date" content="2008-02-27T12:05:46Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-02-27T12:05:46Z"/><meta name="unix:name" content="einit:roadmap"/><meta name="description" content="Well, this is definitely going to need more Structure, so let's start by making a good, old-fashioned Roadmap! Version 0.50.0 - CLI Editor for configuration fil..."/><meta name="category" content="Page"/></head><body><p>Well, this is definitely going to need more Structure, so let's start by making a good, old-fashioned Roadmap!</p><h2>Version 0.50.0</h2><ul><li>CLI Editor for configuration files</li><li>transparent support for openrc (gentoo)</li><li>everything documented properly</li><li>support for Frugalware</li><li>support for FreeBSD, NetBSD, OpenBSD and DragonflyBSD</li><li>support for Debian and (K/X)Ubuntu</li><li>support for Fedora</li></ul><h2>Version 0.60.0</h2><ul><li>GUI frontend, editor and helpers</li></ul><h2>Version 0.70.0</h2><ul><li>transparent support for launchd</li><li>transparent support for upstart</li><li>transparent support for initng</li></ul><h2>Version 0.80.0</h2><ul><li>support for Darwin and MacOSX</li></ul><h2>Version 1.0</h2><ul><li>everything should "just work"</li></ul><h2>Notes</h2><p>I'd think the actual OS support entries might be shifted around a bit, depending on volunteers and general interest, etc.</p></body></html></content><category term="Page"/><category term="einit.org"/></entry>



<entry><title>So, what is this 'eINIT'?</title><updated>2008-01-10T02:12:51Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::63:63</id><summary>eINIT is a replacement for /sbin/init -- the programme that is responsible for booting your computer -- that is all about not wasting resources; that's not wast...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>So, what is this 'eINIT'?</title><meta name="date" content="2008-01-10T02:12:51Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-10T02:12:51Z"/><meta name="unix:name" content="einit:so,-what-is-this-'einit'"/><meta name="description" content="eINIT is a replacement for /sbin/init -- the programme that is responsible for booting your computer -- that is all about not wasting resources; that's not wast..."/><meta name="category" content="Blog Post"/></head><body><p>eINIT is a replacement for /sbin/init -- the programme that is responsible for booting your computer -- that is all about not wasting resources; that's not wasting CPU cycles, but also not wasting RAM either, which should make eINIT very well suited for embedded applications. However, that's not to say eINIT wouldn't work fine (and swiftly) on regular desktops, laptops or servers.</p><p>The primary objective, not wasting CPU cycles, has the most obvious effect: eINIT tends to be a lot faster than most regular sysvinit/rcscripts combinations out there; a lot faster meaning that when booting, all the stuff you need is usually started in under 10 seconds after eINIT gains control. We try to achieve this goal by coding as close to the machine as possible while still keeping things as flexible as possible, meaning that these 10 seconds tend to represent the time those programmes that need to start will actually spend executing, instead of eINIT slowing things down too much due to massive overhead. Additionally eINIT utilises massive threading in order to make sure that your CPU will not be idle waiting for one programme to finish when it could actually be put to better use spawning both programmes at the same time, while simultaneously thinking about what to do next.</p><p>The secondary objective, not wasting RAM, is especially important on embedded devices: adding massive amounts of RAM is just plain not practical on these devices, so the applications should be as small as possible. Since eINIT is actually able to cut corners in a few cases and basically may work without even using a shell at all, it may be possible to construct embedded devices with only eINIT, libraries and the target programmes on them, provided the modules are carefully adjusted (or written in C right away) and the target programmes themselves don't rely on a shell. By reducing the need for a shell, there is also no need to have the shell in-memory most of the time while booting, which saves RAM, nor is there any need to actually run the shell's code, which again saves some CPU time. Also eINIT is very, _very_ modular, so in an embedded setting the developers may decide to radically trim eINIT's list of modules and thus save even more RAM. It's so modular, you could, in theory, link all the .so modules you need into eINIT and then remove the module that is designed to load .so modules, along with all the other things you have no use for.</p><p>There is another, tertiary, objective: Making sure things just work(tm). eINIT is admittedly not quite there yet, but this is actually quite important, at least in my honest opinion it is. No programme should be allowed to act stupid or require arcane whizzbang magic configuration file formats, things should be kept simple instead (if possible). For example, if eINIT is supposed to bring up a service yet is unable to bring up the preferred programme to do so, but it does know an alternative, eINIT will try to use that alternative before bailing out completely. Also eINIT's structure is very modular, which will ultimately allow for special OS/distribution/alternative-init support modules that could re-use a distribution's existing scripting that shipped with your OS (or, let's say launchd's or initng's scripting) in cases where eINIT doesn't have its own yet (one actual example of this is the ex-baselayout-2 (now openrc) support code that allows using gentoo's init scripts just as if they were native).</p><p>Now, obviously eINIT isn't quite there yet, but we're progressing fine. Most of the current effort is on making things work smoothly on Gentoo/Linux, which is actually supported just fine, and we're also trying to make eINIT work on FreeBSD soon.</p></body></html></content><category term="Blog Post"/><category term="einit.org"/></entry>
<entry><title>Sandbox Mode</title><updated>2008-01-12T14:10:41Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::65:65</id><summary>It's rather tedious to try and write something for an init if you need to reboot each time you changed a couple lines just to test them. For that reason, eINIT ...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Sandbox Mode</title><meta name="date" content="2008-01-12T14:10:41Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-12T14:10:41Z"/><meta name="unix:name" content="einit:sandbox-mode"/><meta name="description" content="It's rather tedious to try and write something for an init if you need to reboot each time you changed a couple lines just to test them. For that reason, eINIT ..."/><meta name="category" content="Page"/></head><body><p>It's rather tedious to try and write something for an init if you need to reboot each time you changed a couple lines just to test them. For that reason, eINIT has something called a 'sandbox mode', which allows running eINIT as a non-priviledged user and after the system is already booted. So, let's get down to how you'd use that mode.</p><h2>Getting eINIT installed</h2><p>You'll want to get your own development environment going first, so head over to</p><a href="einit:installing-einit-manually">Installing eINIT manually</a><p>. You should follow this guide verbatim, but instead of using --prefix=/, you should use some other prefix, such as --prefix=/home/${USER}/einit/sandbox/, and you should also make sure you're NOT root on the box. Just be your regular user. Do run 'make install'. Do the same for the xml/sh modules, but again instead of ./install / lib, you do ./install /home/${USER}/einit/sandbox/ lib, or whatever path you chose.</p><p>Remember that --prefix= requires an absolute argument and that you should make sure to have a / at the end of it.</p><h2>Special Configuration</h2><p>Now cd to your sandbox directory, like so: cd /home/${USER}/einit/sandbox/</p><p>In your sandbox --prefix directory, edit etc/einit/local.xml. Add something like this: &lt;configuration&gt; &lt;feedback&gt; &lt;visual&gt; &lt;std-io stdio="/dev/tty" stderr="einit-stderr" /&gt; &lt;/visual&gt; &lt;/feedback&gt; &lt;/configuration&gt;</p><p>That will make sure eINIT will use whatever terminal you start it on for i/o, and it'll make sure to use an "einit-stderr" file in the same directory for notice() calls and most error messages (same as what's normaly on tty11). Speaking of that error-file, do this: touch einit-stderr</p><p>eINIT will /not/ create any of the output files for you, so make sure they exist if you use files instead of ttys (like we do for stderr= here).</p><h2>Running eINIT in sandbox mode</h2><p>MAKE SURE YOU'RE IN THE SANDBOX DIRECTORY FIRST!</p><p>In its "root", with the bin/ lib/ and sbin/ directories. Just like above.</p><p>Now run this: sbin/einit --sandbox --force-init</p><p>This'll run eINIT like it would normally run, except that some functions are skipped. You'll probably see lots of issues with lots of modules because you're not allowed to run some programs as a non-root user: that's no biggie, just strip the list a bit in modes.xml.</p><p>HINT: if you want to run einit through valgrind, you should know that sbin/einit is just a launcher, which will (most of the time) really run "lib/einit/bin/einit-core" instead. It might also run "lib/einit/bin/einit-helper" if it doesn't know what to do, which will in turn run einit-core or do something else entirely. So, for running eINIT through valgrind, you want to do this: valgrind lib/einit/bin/einit-core --sandbox --force-init</p><p>For cachegrind, this is handy: valgrind --tool=callgrind --dump-instr=yes --collect-jumps=yes lib/einit/bin/einit-core --sandbox --force-init</p><p>Now happy hacking :D. Oh, and make sure you don't forget about --sandbox somewhere: if you do forget about that, things usually go nuts because eINIT will use configuration in / and modules in /, but it will use binaries in your --prefix. You don't want that :D.</p></body></html></content><category term="Page"/><category term="einit.org"/></entry>
<entry><title>Network Settings (V2)</title><updated>2008-01-27T01:34:48Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::66:66</id><summary>Let's get right to it with a couple o' examples: einit prefix"configuration-network" hostname s"helios"/ domainname s"jyujin.de"/ interfaces eth0 kernel-modules...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Network Settings (V2)</title><meta name="date" content="2008-01-27T01:34:48Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-27T01:34:48Z"/><meta name="unix:name" content="einit:network-settings-v2"/><meta name="description" content="Let's get right to it with a couple o' examples: einit prefix&quot;configuration-network&quot; hostname s&quot;helios&quot;/ domainname s&quot;jyujin.de&quot;/ interfaces eth0 kernel-modules..."/><meta name="category" content="Page"/></head><body><p>Let's get right to it with a couple o' examples:</p><p>&lt;einit prefix="configuration-network"&gt; &lt;hostname s="helios"/&gt; &lt;domainname s="jyujin.de"/&gt; &lt;interfaces&gt; &lt;eth0&gt; &lt;kernel-modules s="forcedeth" /&gt; &lt;address&gt; &lt;ipv4 address="dhcp" /&gt; &lt;/address&gt; &lt;/eth0&gt; &lt;wlan0&gt; &lt;address&gt; &lt;ipv4 address="dhcp" /&gt; &lt;/address&gt; &lt;wpa-supplicant driver="wext" /&gt; &lt;/wlan0&gt; &lt;/interfaces&gt; &lt;/einit&gt;</p><p>In this example of a network.xml file, we just defined two network interfaces, eth0 and wlan0. eth0 was defined to get a static ipv4 address, and it also needs the kernel module "forcedeth", while wlan0 is also dhcp-configured and uses wpa-supplicant with the default configuration file and the "wext" driver. In addition to these two interfaces, einit will actively search for existing interfaces, such as lo, ip6tnl0 or sit0, so these will also show up with more-or-less reasonable default settings applied.</p><h2>Hostname and Domainname</h2><p>&lt;einit prefix="configuration-network"&gt; &lt;!-- snip --&gt; &lt;hostname s="helios"/&gt; &lt;domainname s="jyujin.de"/&gt; &lt;!-- snip --&gt; &lt;/einit&gt;</p><p>The &lt;hostname /&gt; and &lt;domainname /&gt; elements are used to configure host- and domainname of your machine, respectively.</p><h2>Defining Interfaces</h2><p>To define a network interface, you add an &lt;element /&gt; to the &lt;interfaces&gt;&lt;/interfaces&gt; section in your network.xml file. The name of this element corresponds to the name of the interface, for example: &lt;einit prefix="configuration-network"&gt; &lt;!-- snip --&gt; &lt;interfaces&gt; &lt;wlan0&gt; &lt;!-- interface configuration here --&gt; &lt;/wlan0&gt; &lt;/interfaces&gt; &lt;!-- snip --&gt; &lt;/einit&gt;</p><p>This just defined the "wlan0" interface, with default values for wlan0. This, on the other hand, defines eth0 and eth1: &lt;einit prefix="configuration-network"&gt; &lt;!-- snip --&gt; &lt;interfaces&gt; &lt;eth0&gt; &lt;!-- interface configuration here --&gt; &lt;/eth0&gt; &lt;eth1&gt; &lt;!-- interface configuration here --&gt; &lt;/eth1&gt; &lt;/interfaces&gt; &lt;!-- snip --&gt; &lt;/einit&gt;</p><h2>Default Values</h2><p>In /etc/einit/subsystems.d/network.xml, there's a couple of default values, depending on the interface's name. These default values allow for rather slick configuration files for most "common" setups, especially since eINIT will actually search for network interfaces even if they're not defined in network.xml or elsewhere in eINIT's configuration file. Whenever eINIT needs to find some elements on an interface it will first search in an interface's definition (the part in the above examples that had "&lt;!-- interface configuration here --&gt;"), then it will search the defaults defined in network.xml for suitable elements in a predefined order, until suitable data is found (note that if eINIT is looking for an element that may be defined multiple times, it will still first check the interface definition, then look in the defaults, but it will only fetchmultiple elements if they actually occur in the interface definition, it will not get more than one elements off the defaults).</p><p>The defaults are grouped into three categories: defaults for the loopback interface (lo*), for ethernet interfaces (eth*), wlan interfaces (wlan*, ra*) and defaults for interfaces with any name, and they're searched in that order. At the time of this writing, the defaults look like this:</p><ul><li>loopback interfaces are configured to have the IP address 127.0.0.1 on the 127.0.0.0/8 network. They're brought up automatically, as soon as the interface is detected.</li><li>ethernet interfaces are configured to get an ipv4 address via dhcp, they're brought up automatically but not immediately, i.e. they're added to the "network" group (but only if you haven't defined this group yourself!).</li><li>wlan interfaces are configured to use dhcp by default, however they're not brought up automatically.</li><li>all interfaces will, by default and if they're configured to use dhcp, try to use the "dhcpcd" client, the "pump" client or the "dhclient" to get an IP address, in that order.</li></ul><h2>Configuring Interfaces</h2><p>Since we can't guess everything, here's how to configure interfaces.</p><h3>General Notes</h3><p>All of the following examples will be snippets of XML code that would occur inside the interface definition... like, if this was your network.xml file: &lt;einit prefix="configuration-network"&gt; &lt;!-- snip --&gt; &lt;interfaces&gt; &lt;wlan0&gt; &lt;!-- THIS IS WHERE THE SNIPPETS WOULD GO --&gt; &lt;/wlan0&gt; &lt;/interfaces&gt; &lt;!-- snip --&gt; &lt;/einit&gt;</p><p>"&lt;!-- THIS IS WHERE THE SNIPPETS WOULD GO --&gt;", is where the snippets below would be put.</p><p>Also note that if something is said to allow an element multiple times, then you need to add an id="" to the element if you need to have it in more than once, and the value of this id="" needs to be unique among these same elements. Example (good):</p><p>&lt;einit prefix="configuration-network"&gt; &lt;!-- snip --&gt; &lt;interfaces&gt; &lt;eth0&gt; &lt;route network="10.2.0.0/16" /&gt; &lt;/eth0&gt; &lt;eth1&gt; &lt;route id="primus" network="10.2.0.0/24" /&gt; &lt;route id="secundus" network="10.2.0.1/24" /&gt; &lt;/eth1&gt; &lt;/interfaces&gt; &lt;!-- snip --&gt; &lt;/einit&gt;</p><p>BAD Example (THESE WILL NOT WORK AS EXPECTED!): &lt;einit prefix="configuration-network"&gt; &lt;!-- snip --&gt; &lt;interfaces&gt; &lt;eth2&gt; &lt;route id="t00-kewl-t0-readz" network="10.2.0.0/24" /&gt; &lt;route id="t00-kewl-t0-readz" network="10.2.0.1/24" /&gt; &lt;/eth2&gt; &lt;eth2&gt; &lt;route network="10.2.0.0/24" /&gt; &lt;route network="10.2.0.1/24" /&gt; &lt;/eth2&gt; &lt;/interfaces&gt; &lt;!-- snip --&gt; &lt;/einit&gt;</p><p>Got it? Good, now off to the details.</p><h3>Setting IP Addresses</h3><p>eINIT can either handle static addresses, or dhcp-configured interfaces. For DHCP you'd use: &lt;address&gt; &lt;ipv4 address="dhcp" /&gt; &lt;/address&gt;</p><p>For a static address, like "10.2.0.2", you'd use: &lt;address&gt; &lt;ipv4 address="10.2.0.2" /&gt; &lt;/address&gt;</p><p>As you can see, you need to pack all of your addresses in the "&lt;address&gt;&lt;/address&gt;" Element. IPv4 Addresses (= regular IP Addresses) are defined using the &lt;ipv4 /&gt; element, while IPv6 Addresses would be defined using the &lt;ipv6 /&gt; element. Both elements use the address="" attribute for setting the actual address. IPv4 treats "dhcp" as a special address that is interpreted as "use dhcp to find out what this interface's address is.</p><p>Notes:</p><ul><li>The &lt;ipv4 /&gt; and &lt;ipv6 /&gt; elements may occur multiple times (don't forget about the id="").</li><li>The default for lo* is to use the "127.0.0.1/8" ipv4 address, and the "::1" ipv6 address.</li><li>eth*, wlan* and ra* interfaces default to DHCP.</li></ul><h3>Routes and Gateways</h3><p>&lt;route network="127.0.0.0/8" /&gt;</p><p>&lt;route network="10.2.0.0/24" gateway="10.2.0.1" /&gt;</p><p>&lt;route gateway="10.2.0.254" /&gt;</p><p>&lt;route network="default" gateway="10.2.0.254" /&gt;</p><p>The "&lt;route /&gt;" element is used to set up gateways and routes. This element may be used multiple times. In the above four examples, the first would mean "this interface is on the 127.0.0.0/8 network", the second would mean "If you need to get to the 10.2.0.0/24 network, use this interface and go ask 10.2.0.1 for how to get there", while the third and fourth would mean "In case you don't know where to go with that request, ask 10.2.0.254 via this interface". With this explanation, the meaning of the network="" and the gateway="" attributes should be obvious.</p><p>Notes:</p><ul><li>The &lt;ipv4 /&gt; and &lt;ipv6 /&gt; elements may occur multiple times (don't forget about the id="").</li><li>lo* defaults to the "127.0.0.0/8"</li><li>you should not need this on elements configured via dhcp</li></ul><h3>Nameservers</h3><p>&lt;nameserver address="10.2.0.1" domain="jyujin.de" /&gt;</p><p>The "&lt;nameserver /&gt;" element is used to set up DNS servers and DNS search options. There's two distinct ways of doing this:</p><ul><li>The straightforward way is to edit /etc/resolv.conf manually and not tell einit about anything</li><li>If you want to let einit control this, you use these nodes on your interface. You should always add the address="" attribute to at least one of your &lt;nameserver /&gt; elements. Other allowed attributes are domain="", search="", options="" and sortlist="", with the exact same meaning as the corresponding statements in the /etc/resolv.conf file. This type of configuration has the advantage of being able to set different DNS configurations for different interfaces, depending on which of them are active.</li></ul><p>Notes:</p><ul><li>The &lt;nameserver /&gt; element may occur multiple times (don't forget about the id="").</li><li>Please note that &lt;nameserver /&gt; elements on different interfaces are only additive if you have the "resolvconf" program on your system. If you do not have this installed, then only nameserver configuration on the last interface to be enabled will be used.</li></ul><h3>Bringing interfaces up automatically/The "network" group</h3><p>&lt;automatic b="yes" /&gt;</p><p>&lt;immediate b="yes" /&gt;</p><p>The &lt;automatic /&gt; element's b="" attribute (boolean: "yes" or "no") decides whether or not to add an interface to the "network" group (but it ONLY does so if you do not define this group yourself). The "network" group is a special group of services that should contain all the interfaces you need to connect to the internet or your LAN. If you let eINIT create this group, then it will contain all the &lt;automatic b="yes" /&gt; interfaces will be added to this group and the seq="" will be set to "all".</p><p>&lt;immediate /&gt; also has a boolean b="" attribute. This Element controls whether or not eINIT will try to bring an interface up as soon as it detects the interface.</p><p>Notes:</p><ul><li>lo* and eth* default to &lt;automatic b="yes" /&gt;</li><li>lo* defaults to &lt;immediate b="yes" /&gt;</li><li>everything else defaults to &lt;automatic b="no" /&gt; and &lt;immediate b="no" /&gt;</li><li>if you define a network-group yourself, then the &lt;automatic /&gt; element will have no effect at all</li></ul><h3>WPA Supplicant</h3><p>&lt;wpa-supplicant /&gt;</p><p>&lt;wpa-supplicant driver="wext" configuration-file="etc/wpa_supplicant/wpa_supplicant.conf" /&gt;</p><p>For WLAN configurations, WPA Supplicant is the way to go. If you need some interface to be configured via wpa_supplicant, then just add this element. If you do not add further attributes, then wpa-supplicant will default to the "wext" driver and the default configuration file will be "/etc/wpa_supplicant/wpa_supplicant.conf". You may override these defaults using the driver="" and the configuration-file="" attributes for the wpa-supplicant element, respectively.</p><ul><li>All interfaces default to NOT using wpa-supplicant. You need to enable this explicitily, usually for your WLAN interfaces.</li></ul><h3>TUN devices</h3><p>&lt;tun /&gt;</p><p>&lt;tun owner="jdoe" clone-device="/dev/misc/net/tun" /&gt;</p><p>If you need a tun device for some reason (think vbox, etc), you may set these up using eINIT's &lt;tun /&gt; element for interfaces. Just adding that is usually enough, maybe also add owner="". clone-device="" shouldn't normally be needed.</p><ul><li>You'll probably want to add &lt;automatic b="yes" /&gt; for your &lt;tun /&gt;s.</li><li>You need the "tunctl" programme for this to work.</li></ul><h3>Bridges</h3><p>&lt;bridge elements="eth0:eth1:lo:X:meow" /&gt;</p><p>This element allows constructing bridges. You'll want to create your own interface... like &lt;br0&gt;&lt;/br0&gt;, then throw this element in to construct a bridge. The elements="" attribute holds a colon-separated list of interfaces that should be thrown in this bridge.</p><ul><li>You'll probably want to add &lt;automatic b="yes" /&gt; for your &lt;bridge /&gt;s, and add &lt;automatic b="no" /&gt; to the elements.</li><li>You need the "brctl" programme for this to work.</li><li>If you need kernel modules for bridges, check the Kernel Modules section below. If you only need modules for you interfaces, add those to the respective interface's definition.</li><li>You'll need to have an &lt;address&gt;&lt;/address&gt; element with contents in your bridge interface to put it to any use, addresses on the bridge ports don't count.</li></ul><h3>Bonding</h3><p>&lt;bond elements="eth0:eth1" /&gt;</p><p>This is pretty much the same as bridging above, just for bonding.</p><ul><li>You'll probably want to add &lt;automatic b="yes" /&gt; for your &lt;bond /&gt;s, and add &lt;automatic b="no" /&gt; to the slave interfaces.</li><li>You'll need to have an &lt;address&gt;&lt;/address&gt; element with contents in your bonding master interface to put it to any use, addresses on the bonding slaves don't count.</li></ul><h3>Kernel Modules</h3><p>&lt;kernel-modules s="forcedeth" /&gt;</p><p>If you need some special kernel module loaded to use an interface, you'd use the "&lt;kernel-modules /&gt;" element. The s="" attribute contains a list of kernel modules, separated by the ":" colon symbol.</p><h2>Troubleshooting and Upgrade Notes</h2><ul><li>Don't define &lt;lo /&gt;. There's no need for that anymore. Really, just don't do it.</li></ul><h2>More Examples</h2><h3>Super-Simple</h3><p>Usually, on non-wlan setups, the following network.xml will suffice: &lt;einit prefix="configuration-network"&gt; &lt;hostname s="helios"/&gt; &lt;domainname s="jyujin.de"/&gt; &lt;/einit&gt;</p><p>This will configure the host- and domainname of a box, and then add all the ethernet interfaces to the network group (if you didn't specify this group yourself). It'll also bring up "lo" with a proper static IP address and configure all interfaces that it's supposed to bring up via DHCP. This'll require proper coldplugging/hotplugging or in-kernel kernel modules.</p><h3>Super-Simple, WLAN via WPA Supplicant</h3><p>&lt;einit prefix="configuration-network"&gt; &lt;hostname s="helios"/&gt; &lt;domainname s="jyujin.de"/&gt; &lt;interfaces&gt; &lt;/wlan0&gt; &lt;wpa-supplicant /&gt; &lt;/wlan0&gt; &lt;/interfaces&gt; &lt;/einit&gt;</p><p>Yep, that's all that's needed most of the time. This'll assume that the interface is called "wlan0", of course, and that you're using the "wext" driver and the configuration file "/etc/wpa_supplicant/wpa_supplicant.conf".</p><h3>Super-Simple, WLAN via WPA Supplicant, bring up wlan0 automatically</h3><p>&lt;einit prefix="configuration-network"&gt; &lt;hostname s="helios"/&gt; &lt;domainname s="jyujin.de"/&gt; &lt;interfaces&gt; &lt;/wlan0&gt; &lt;wpa-supplicant driver="wext" configuration-file="/etc/wpa_supplicant/wpa_supplicant.conf" /&gt; &lt;automatic b="yes" /&gt; &lt;/wlan0&gt; &lt;/interfaces&gt; &lt;/einit&gt;</p><p>Notice the explicit definition of the driver and configuration file...</p><h3>Multiple IP Addresses</h3><p>&lt;einit prefix="configuration-network"&gt; &lt;hostname s="helios"/&gt; &lt;domainname s="jyujin.de"/&gt; &lt;interfaces&gt; &lt;eth0&gt; &lt;address&gt; &lt;ipv4 id="primus" address="dhcp" /&gt; &lt;ipv4 id="secundus" address="10.4.1.0/24" /&gt; &lt;ipv4 id="tertius" address="192.168.0.1/24" /&gt; &lt;/address&gt; &lt;/eth0&gt; &lt;/interfaces&gt; &lt;/einit&gt;</p><p>Notice the id="" on the &lt;ipv4 /&gt; elements. Yes, these are needed for multiple IP Addresses on the same interface.</p><h3>TUNs</h3><p>&lt;einit prefix="configuration-network"&gt; &lt;hostname s="helios"/&gt; &lt;domainname s="jyujin.de"/&gt; &lt;interfaces&gt; &lt;tun0&gt; &lt;tun /&gt; &lt;/tun0&gt; &lt;meow&gt; &lt;tun /&gt; &lt;/meow&gt; &lt;/interfaces&gt; &lt;/einit&gt;</p><p>Easy as cake, this defines two TUN interfaces: tun0 and meow.</p><h3>TUNs and Bridges</h3><p>&lt;einit prefix="configuration-network"&gt; &lt;hostname s="helios"/&gt; &lt;domainname s="jyujin.de"/&gt; &lt;interfaces&gt; &lt;tun0&gt; &lt;tun /&gt; &lt;/tun0&gt; &lt;meow&gt; &lt;tun /&gt; &lt;/meow&gt; &lt;br0&gt; &lt;bridge elements="eth0:meow:tun0" /&gt; &lt;address&gt; &lt;ipv4 address="dhcp" /&gt; &lt;/address&gt; &lt;automatic b="yes" /&gt; &lt;/br0&gt; &lt;eth0&gt; &lt;automatic b="no" /&gt; &lt;/eth0&gt; &lt;/interfaces&gt; &lt;/einit&gt;</p><p>This defines two TUN interfaces: tun0 and meow. Then, it bridges tun0, meow and eth0 together as br0, and makes sure that eth0 does not get an IP address automatically and br0 will be brought up instead.</p></body></html></content><category term="Page"/><category term="einit.org"/></entry>

<entry><title>Filesystem Layout</title><updated>2008-01-20T13:53:36Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::68:68</id><summary>eINIT will (by default) keep its files somewhat scattered all over the filesystem. All of the following paths are relative to the --prefix chosen at compile-tim...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Filesystem Layout</title><meta name="date" content="2008-01-20T13:53:36Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-20T13:53:36Z"/><meta name="unix:name" content="einit:filesystem-layout"/><meta name="description" content="eINIT will (by default) keep its files somewhat scattered all over the filesystem. All of the following paths are relative to the --prefix chosen at compile-tim..."/><meta name="category" content="Page"/></head><body><p>eINIT will (by default) keep its files somewhat scattered all over the filesystem. All of the following paths are relative to the --prefix chosen at compile-time (usually "/", the default is "/einit/").</p><ul><li>/lib</li><ul><li>contains libeinit and libeinit++</li></ul><ul><li>/lib/einit</li></ul><ul><ul><li>contains einit.xml (the main entry point for configuration data)</li></ul></ul><ul><ul><li>/lib/einit/defaults</li></ul></ul><ul><ul><ul><li>this is a backup copy of all the defaults of whatever ends up in /etc/einit</li></ul></ul></ul><ul><ul><li>/lib/einit/modules-xml</li></ul></ul><ul><ul><ul><li>this directory contains all of einit's modules that are written in .xml/sh -- those're typically only actual services, like gdm, syslog, etc</li></ul></ul></ul><ul><ul><li>/lib/einit/modules-scheme</li></ul></ul><ul><ul><ul><li>same as modules-xml, just for scheme modules -- those may mess with internals a bit more</li></ul></ul></ul><ul><ul><li>/lib/einit/modules</li></ul></ul><ul><ul><ul><li>this is the default place for modules that were written most common programming languages (think C) -- you can't live without those :D</li></ul></ul></ul><ul><ul><li>/lib/einit/modules-c</li></ul></ul><ul><ul><ul><li>one of two directories that get picked up by einit's C-autocompiler</li></ul></ul></ul><ul><ul><li>/lib/einit/modules-c-compiled</li></ul></ul><ul><ul><ul><li>this is where the C-autocompiler will put its files</li></ul></ul></ul><ul><ul><li>/lib/einit/ipc</li></ul></ul><ul><ul><ul><li>this is where IPC modules are stored (dbus, unix socket files)</li></ul></ul></ul><ul><ul><li>/lib/einit/bin</li></ul></ul><ul><ul><ul><li>einit's core and the helper binary</li></ul></ul></ul><ul><ul><li>/lib/einit/scripts</li></ul></ul><ul><ul><ul><li>script files</li></ul></ul></ul><li>/etc</li><ul><li>/etc/einit</li></ul><ul><ul><li>here's where all the real configuration is stored (apart from einit.xml in /lib/einit)</li></ul></ul><ul><ul><li>/etc/einit/local.xml</li></ul></ul><ul><ul><li>/etc/einit/modes.xml</li></ul></ul><ul><ul><li>/etc/einit/fstab.xml</li></ul></ul><ul><ul><li>/etc/einit/network.xml</li></ul></ul><ul><ul><li>/etc/einit/conf.d</li></ul></ul><ul><ul><ul><li>all the configuration .xml files for services go here</li></ul></ul></ul><ul><ul><li>/etc/einit/subsystem.d</li></ul></ul><ul><ul><ul><li>all the configuration .xml files for einit subsystems go here</li></ul></ul></ul><ul><ul><li>/etc/einit/local</li></ul></ul><ul><ul><ul><li>this is where you could put extra local configuration</li></ul></ul></ul><ul><ul><li>/etc/einit/modules</li></ul></ul><ul><ul><ul><li>this is where you could put extra local modules</li></ul></ul></ul><ul><ul><li>/etc/einit/modules-c</li></ul></ul><ul><ul><ul><li>this is where you could put extra local .c modules</li></ul></ul></ul><li>/usr</li><ul><li>/usr/include</li></ul><ul><ul><li>/usr/include/einit</li></ul></ul><ul><ul><ul><li>header files for eINIT's core</li></ul></ul></ul><ul><ul><li>/usr/include/einit-modules</li></ul></ul><ul><ul><ul><li>header files for eINIT modules</li></ul></ul></ul><li>/bin</li><ul><li>/bin/einit-control</li></ul><li>/sbin</li><ul><li>/sbin/einit</li></ul></ul></body></html></content><category term="Page"/><category term="einit.org"/></entry>

<entry><title>Bootchart Integration</title><updated>2008-01-22T02:20:42Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::70:70</id><summary>Bootcharts (see http://bootchart.org/) are a nice way of comparing startup times, as well as find tight or loose spots in your bootup sequence. As of einit-0.25...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Bootchart Integration</title><meta name="date" content="2008-01-22T02:20:42Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-22T02:20:42Z"/><meta name="unix:name" content="einit:bootchart-integration"/><meta name="description" content="Bootcharts (see http://bootchart.org/) are a nice way of comparing startup times, as well as find tight or loose spots in your bootup sequence. As of einit-0.25..."/><meta name="category" content="Page"/></head><body><p>Bootcharts (see http://bootchart.org/) are a nice way of comparing startup times, as well as find tight or loose spots in your bootup sequence.</p><p>As of einit-0.25.3, bootchart support has been integrated into the core. Instead of using the init=/sbin/bootchartd trick as described in bootchart's manual, einit can generate the necessary data files directly. To do so, the new special file /etc/einit/subsystems.d/bootchart.xml has been created, which, by default, looks like this:</p><h2>Default Settings</h2><p>&lt;?xml version="1.1" encoding="UTF-8" ?&gt; &lt;einit&gt; &lt;configuration&gt; &lt;bootchart&gt; &lt;!-- change b="no" to b="yes" to activate einit's bootchart --&gt; &lt;active b="no" /&gt; &lt;save-to s="/var/log/bootchart.tgz" /&gt; &lt;polling-interval i="200000" /&gt; &lt;!-- ... in microseconds --&gt; &lt;process-accounting b="yes" /&gt; &lt;extra-waiting-time i="5000000" /&gt; &lt;!-- ... also in microseconds --&gt; &lt;max-log-size i="2000000" /&gt; &lt;!-- 2MB should be a reasonable default --&gt; &lt;chart-directory s="/var/log" /&gt; &lt;chart-format s="png" /&gt; &lt;/bootchart&gt; &lt;/configuration&gt; &lt;/einit&gt;</p><p>(NOTE: in the 0.25.3 stable release itself, this file does not yet exist, but instead this bit of configuration is stored in einit.xml. You will need to create it yourself, with the example above, or, better still, simply enable bootchart by adding the necessary &lt;bootchart&gt;&lt;active b="yes" /&gt;&lt;/bootchart&gt; to your local.xml's &lt;configuration&gt;&lt;/configuration&gt; section.)</p><h2>Enabling Bootchart Creation</h2><p>In order to enable creating the bootchart.tgz file that is used by bootchart to analyse the boot process, you should just set the &lt;active b="no" /&gt; element in bootchart.xml to &lt;active b="yes" /&gt;. This will enable bootchart logging and thus create the bootchart data file. You do NOT need to modify your bootloader configuration, because you do NOT need to add init=/sbin/bootchartd to your kernel command line. eINIT does all this.</p><h2>Bootchart Options</h2><p>Most of the following options are kind of useless for most people. Maybe the size limit is going to help, but for all the other settings, the default values ought to be just fine.</p><ul><li>The limit imposed on the output that is produced by einit is usually 2MB, which should suffice for roughly 40-60 seconds of logging, and thus it should suffice for a non-fsck-heavy boot of einit. If your bootup time is exceptionally long, then just adjust the &lt;max-log-size i="2000000" /&gt; element. The value is in bytes, and it limits the raw, uncompressed data collected by einit. If in doubt, just add a 0.</li></ul><ul><li>&lt;extra-waiting-time i="5000000" /&gt; defines how long after the bootup switch (to the default mode, most of the time) einit should keep logging. This value is in microseconds. The default is 5 seconds, which means that when booting, einit will boot normally, and when it thinks it's done, it'll keep bootcharting for an additional 5 seconds before writing the bootchart data. Also note that this means that the "boot up time" reported in your bootcharts is, by default, increased by 5 seconds.</li></ul><ul><li>&lt;polling-interval i="200000" /&gt; is used to define how often (in microseconds) einit will make a snapshot of all the bootchart data. you shouldn't set this value too low. The default (0.2 seconds) is alright for most purposes. Don't forget that you'll probably be rendering to .png, and that the default resolution for a single second is just a couple of pixels anyway. Setting this value too low (under 0.1 seconds) will not usually increase your granularity but instead just make your bootup slower overall (due to the increased need for doing periodic snapshots, storing them in ram, etc, etc).</li></ul><ul><li>Use &lt;save-to s="/var/log/bootchart.tgz" /&gt; if you want to change where eINIT puts your bootchart data files. The default value is suitable for most installations of the bootchart package, so you'll just need to issue a "bootchart" from your favourite terminal and you got yourself a nice chart.</li></ul></body></html></content><category term="Page"/><category term="einit.org"/></entry>



<entry><title>eINIT Scheme Modules -git</title><updated>2008-01-22T21:35:53Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::74:74</id><summary>Live GIT Version.</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>eINIT Scheme Modules -git</title><meta name="date" content="2008-01-22T21:35:53Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-22T21:35:53Z"/><meta name="unix:name" content="einit:einit-scheme-modules--git"/><meta name="description" content="Live GIT Version."/><meta name="category" content="Project Release"/></head><body><p>Live GIT Version.</p></body></html></content><category term="Project Release"/><category term="einit.org"/></entry>
<entry><title>eINIT Core -git</title><updated>2008-01-22T21:36:03Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::75:75</id><summary>Live GIT Version.</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>eINIT Core -git</title><meta name="date" content="2008-01-22T21:36:03Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-22T21:36:03Z"/><meta name="unix:name" content="einit:einit-core--git"/><meta name="description" content="Live GIT Version."/><meta name="category" content="Project Release"/></head><body><p>Live GIT Version.</p></body></html></content><category term="Project Release"/><category term="einit.org"/></entry>
<entry><title>eINIT XML/sh Modules -git</title><updated>2008-01-22T21:36:09Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::76:76</id><summary>Live GIT Version.</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>eINIT XML/sh Modules -git</title><meta name="date" content="2008-01-22T21:36:09Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-22T21:36:09Z"/><meta name="unix:name" content="einit:einit-xml-sh-modules--git"/><meta name="description" content="Live GIT Version."/><meta name="category" content="Project Release"/></head><body><p>Live GIT Version.</p></body></html></content><category term="Project Release"/><category term="einit.org"/></entry>
<entry><title>einit-notify</title><updated>2008-01-22T21:45:51Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::77:77</id><summary>A small app that serves as a connector between libeinit and libnotify. It'll pop up small notice dialogues whenever eINIT has something to say.</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>einit-notify</title><meta name="date" content="2008-01-22T21:45:51Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-01-22T21:45:51Z"/><meta name="unix:name" content="einit:einit-notify"/><meta name="description" content="A small app that serves as a connector between libeinit and libnotify. It'll pop up small notice dialogues whenever eINIT has something to say."/><meta name="category" content="Project Description"/></head><body><p>A small app that serves as a connector between libeinit and libnotify. It'll pop up small notice dialogues whenever eINIT has something to say.</p></body></html></content><category term="Project Description"/><category term="einit.org"/></entry>
<entry><title>How I learned to stop worrying and love the parenthesis, or, regarding the new scheme modules.</title><updated>2008-01-22T22:06:40Z</updated><author><name>Leonardo Valeri Manera</name><email>lvalerimanera@gmail.com</email></author><id>drupal:drupal-einit::78:78</id><summary>You might have heard that we've finally (we started talking about it before the summer) implemented eINIT modules in scheme.</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>How I learned to stop worrying and love the parenthesis, or, regarding the new scheme modules.</title><meta name="date" content="2008-01-22T22:06:40Z"/><meta name="author" content="Leonardo Valeri Manera"/><meta name="mtime" content="2008-01-22T22:06:40Z"/><meta name="unix:name" content="einit:how-i-learned-to-stop-worrying-and-love-the-parenthesis,-or,-regarding-the-new-scheme-modules."/><meta name="description" content="You might have heard that we've finally (we started talking about it before the summer) implemented eINIT modules in scheme."/><meta name="category" content="Blog Post"/></head><body><p>You might have heard that we've finally (we started talking about it before the summer) implemented eINIT modules in scheme.&lt;!--break--&gt;</p><p>I'm not going to get into the argument of why scheme or why we like it or anything of the sort, apart from mentioning, purely in passing, that if you don't like scheme, better watch out, when I am king you will be first against the wall ;)</p><p>Neither will I point you to resources you might want to look at if you want to make non-trivial modules for eINIT; I'll save that for when we have everything we need done, and the current code gets released.</p><p>By which point you might very well be wondering what, exactly, if anything, I'm here to say.</p><p>To which I reply: "Well, actually I'm here mostly to ask you to test the new alsa scripts currently in git"</p><p>I've shamelessly stolen Roy Marples' - aka, uberlord, the developer of gentoo's baselayout - alsasound init.d script logic, and implemented it as a scheme module. It comes with a 100% genuine "Works Here(tm)" guarantee.</p><p>Which is to say, please either spec s-alsa and s-kern-alsa in your audio group. or use prefer lines, and let me know if it works for you, and if it does not, what does it say, and what errors do you see in tty11?</p><p>Configuration for the new alsa scripts can be found in alsa-new.xml and should be self-explanatory.</p><p>Apart from that, I would appreciate it if you would test the nfs module - yes, eINIT now has NFS server support (shock, horror). Again, works here, please test and let me know. I'm especially interested in NFSv4 support, as I could not get that to work under any init system on my network.</p><p>Those are the main ones.. there's also a few smaller modules of lesser interest, like a generalized (but not quite final) binfmt_misc registering module, support for the virtualbox guest os additions, and a module to load the fuse kernel module and mount the fusectl filesystem for your more advanced FUSE needs.</p><p>...well, till next time. ta-dah! o/</p></body></html></content><category term="Blog Post"/><category term="einit.org"/></entry>








<entry><title>Two Irishmen are walking down Broadway...</title><updated>2008-02-09T15:01:13Z</updated><author><name>Leonardo Valeri Manera</name><email>lvalerimanera@gmail.com</email></author><id>drupal:drupal-einit::87:87</id><summary>Or: A Progress report. Since Magnus and Ryan aren't doing any such thingamajigs, it falls to me, would seem :) Which is passing strange if you think about it, s...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Two Irishmen are walking down Broadway...</title><meta name="date" content="2008-02-09T15:01:13Z"/><meta name="author" content="Leonardo Valeri Manera"/><meta name="mtime" content="2008-02-09T15:01:13Z"/><meta name="unix:name" content="einit:two-irishmen-are-walking-down-broadway..."/><meta name="description" content="Or: A Progress report. Since Magnus and Ryan aren't doing any such thingamajigs, it falls to me, would seem :) Which is passing strange if you think about it, s..."/><meta name="category" content="Blog Post"/></head><body><p>Or: A Progress report.</p><p>Since Magnus and Ryan aren't doing any such thingamajigs, it falls to me, would seem :)</p><p>Which is passing strange if you think about it, seeing as all the changes since my last entries are in the core, pretty much, and I don't work with the core - be thankful for that, my little young 'uns.</p><p>Anyhoo, let's "get jiggy with it".&lt;!--break--&gt;</p><p>- Network V2:</p><p>You might have seen this in the #einit Topic before Magnus and Ryan had their spoonfight. The live tree has an entirely new networking subsystem, more flexible and powerful and overall the greatest thing since sliced bread after yours truly. We haven't /quite/ got the more advanced network stuff (bridging for example) down perfecly and/or sufficiently tested, but now that 'resolvconf' usage for multiple dns/domain setups has been fixed, we're on the right track.</p><p>If you'd like to help test it, use the master branch, as the testing branch is kinda a little maybe broken-ish. More on this afterwards.</p><p>- Mount/filesystem service requirements:</p><p>Mount/fstype XML nodes now have optional service dependency fields much like those of XML/sh modules: requires/after/before etc. This should make it much easier to hook up contributed network filesystem modules (eg, if someone were to write an afs module), without needing to modify the core mounter code.</p><p>For example, if you need fancy messing around with fuse, use requires="fuse" and einit will automount the fusectl filesystem in /proc and take care of any other advanced FUSE details.</p><p>- SCons!</p><p>We're moving our build system to SCons, because Magnus is sick of wrestling with gmake/autovoodoo and even more sick of trying to make that work proper under other UNIXs. This is kind of half-done right now, so that's part of the reason the testing tree is broken at the moment.</p><p>This means you'll need python installed (shock, horror) to build eINIT, and possibly scons itself. We might package scons-local in non-gentoo tarballs, or we might not... it will depend on how lazy Magnus is feeling. Certainly you'll need it once the testing tree works to build from git.</p><p>- Plan9fs:</p><p>Our IPC system uses plan9fs now, instead of dbus. There is a currently optional 9p virtual filesystem that can be used to do all the things you can do with eINIT's --ipc, and more besides once its done, but I wll stress its /optional/ for core functionality. We use a bundled and enhanced version of libixp for internal IPC, so it will work even if you don't have 9p support compiled in your kernel (or as a module). As you'll see later though, you might wanna press the little [M] button for 9p in network filesystems next time you build your kernel.</p><p>Magnus is currently reworking our entire IPC system's internals to work on 9p, so that's the other reason for why the testing branch is broken, but there will be advantages once its done: it will allow users and application developers to read and modify einit's configuration as a filesystem tree.</p><p>The configuration modification system is not very user friendly, but there's something coming up that will help.</p><p>- Configuration Tool:</p><p>Ryan is planning a configuration tool for eINIT using the 9p IPC. Its in early stages of design yet, and hopefully Ryan will tell you more about it once (if?) the plans coalesce, but if you think you can help, join us in #einit on freenode. This will probably use the mounted 9p IPC virtual filesystem, so that's the reason you might wanna add 9p support as a module :)</p><p>... well, I've run out steam (scheme? :D), and I think I've covered pretty much everything.</p><p>Happy Hacking!</p></body></html></content><category term="Blog Post"/><category term="einit.org"/></entry>





<entry><title>einit.org</title><updated>2008-02-16T17:10:49Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::93:93</id><summary>This is for tracking issues about this 'ere website</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>einit.org</title><meta name="date" content="2008-02-16T17:10:49Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-02-16T17:10:49Z"/><meta name="unix:name" content="einit:einit.org"/><meta name="description" content="This is for tracking issues about this 'ere website"/><meta name="category" content="Project Description"/></head><body><p>This is for tracking issues about this 'ere website</p></body></html></content><category term="Project Description"/><category term="einit.org"/></entry>

<entry><title>The 10 second laptop</title><updated>2008-02-17T00:40:34Z</updated><author><name>morphir</name><email>ombinde@gmail.org</email></author><id>drupal:drupal-einit::95:95</id><summary>img src"http://einit.org/files/10seclaptop.png"/ Why go slow when you can go fast? Why do you drive a Toyota, when you can drive a Ferrari? einit is up to the c...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>The 10 second laptop</title><meta name="date" content="2008-02-17T00:40:34Z"/><meta name="author" content="morphir"/><meta name="mtime" content="2008-02-17T00:40:34Z"/><meta name="unix:name" content="einit:the-10-second-laptop"/><meta name="description" content="img src&quot;http://einit.org/files/10seclaptop.png&quot;/ Why go slow when you can go fast? Why do you drive a Toyota, when you can drive a Ferrari? einit is up to the c..."/><meta name="category" content="Page"/></head><body><p>&lt;img src="http://einit.org/files/10seclaptop.png"/&gt;</p><p>Why go slow when you can go fast? Why do you drive a Toyota, when you can drive a Ferrari?</p><p>einit is up to the challenge, and that is to leave every opponent in the dust. We are booting up the computer from grub to x within 10 seconds, yes, that is what this project is all about speed and more speed -- ready, set, GO!!</p></body></html></content><category term="Page"/><category term="einit.org"/></entry>
<entry><title>Lockdown!</title><updated>2008-02-18T01:04:17Z</updated><author><name>Leonardo Valeri Manera</name><email>lvalerimanera@gmail.com</email></author><id>drupal:drupal-einit::96:96</id><summary>or: How we force ourselves to do releases. Sunday's over or nearly over. In preparation for the 0.40 release in one week, we're now entering feature freeze unti...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Lockdown!</title><meta name="date" content="2008-02-18T01:04:17Z"/><meta name="author" content="Leonardo Valeri Manera"/><meta name="mtime" content="2008-02-18T01:04:17Z"/><meta name="unix:name" content="einit:lockdown"/><meta name="description" content="or: How we force ourselves to do releases. Sunday's over or nearly over. In preparation for the 0.40 release in one week, we're now entering feature freeze unti..."/><meta name="category" content="Blog Post"/></head><body><p>or: How we force ourselves to do releases.</p><p>Sunday's over or nearly over. In preparation for the 0.40 release in one week, we're now entering feature freeze until its out :)</p><p>As a result, sometime tomorrow testing branch will get folded in master. We're going to be bug-fixing exclusively for a week, and its already pretty stable, but 'caveat lector' neways.</p><p>A couple of new things have made it into the window, namely the output and log have been daemonised, and use curses. &lt;!--break--&gt; In layman terms, this means you can see what you get in tty9 and tty11 from... anywhere that has curses support really; xterms, ssh sessions, you name it. We believe this rates 'pretty darn spiffy' status. Curses also lets us implement scrolling of output with up/down arrows (don't worry, we'll add vim and emacs equivalents for arrow-less remote terminals for you antediluvians), though that's not implemented as of tonight... but we've only been playing with it for a few hours so cut us some slack, k? k. It also means that since the main thread doesn't deal with the intricacies of writing out the output with a semblance of readabililty, eINIT boots even faster! Also, we also have a boot progress scrollbar!</p><p>To our (imperfect) knowledge we're the only init system with such features.</p><p>Still some outstanding issues, namely what the hell do we do to make udev not boot like a slug - on average fully half of the non-kernel boot time is waiting for udev to give the ok - plus a few niggles with mounting order and lvm/md that come out of some recent changes in the way the core multi-threads fscks and disk-related stuff.</p><p>Ryan's config tool, einit-cfg, is progressing.. with a little luck it'll be out with basic functionality in time for the new core release. Cross your fingers.</p><p>If you'd like to help make this release better, follow the instructions in the wiki and install from git, then come talk to us on #einit@freenode.net starting tuesday. We simply don't have enough machines and time to test something approaching all configurations otherwise :)</p></body></html></content><category term="Blog Post"/><category term="einit.org"/></entry>

<entry><title>A C module a day keeps the scheme away!</title><updated>2008-02-19T18:26:32Z</updated><author><name>Ryan Hope</name><email>rmh3093@gmail.com</email></author><id>drupal:drupal-einit::98:98</id><summary>I order to combat this scheme infestation :D that we are enduring, I will try and convert any init script that is requested to a C module... Already on my list:...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>A C module a day keeps the scheme away!</title><meta name="date" content="2008-02-19T18:26:32Z"/><meta name="author" content="Ryan Hope"/><meta name="mtime" content="2008-02-19T18:26:32Z"/><meta name="unix:name" content="einit:a-c-module-a-day-keeps-the-scheme-away"/><meta name="description" content="I order to combat this scheme infestation :D that we are enduring, I will try and convert any init script that is requested to a C module... Already on my list:..."/><meta name="category" content="Blog Post"/></head><body><p>I order to combat this scheme infestation :D that we are enduring, I will try and convert any init script that is requested to a C module...</p><p>Already on my list: *alsa *apache</p></body></html></content><category term="Blog Post"/><category term="einit.org"/></entry>
<entry><title>T3h new Build System: Scons FTW</title><updated>2008-02-19T22:53:01Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::99:99</id><summary>Okay, Leonardo ordered me to write about this... actually he already did this a while ago, but we all know i'm a lazy son-of-a-playstation ;).</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>T3h new Build System: Scons FTW</title><meta name="date" content="2008-02-19T22:53:01Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-02-19T22:53:01Z"/><meta name="unix:name" content="einit:t3h-new-build-system:-scons-ftw"/><meta name="description" content="Okay, Leonardo ordered me to write about this... actually he already did this a while ago, but we all know i'm a lazy son-of-a-playstation ;)."/><meta name="category" content="Blog Post"/></head><body><p>Okay, Leonardo ordered me to write about this... actually he already did this a while ago, but we all know i'm a lazy son-of-a-playstation ;).</p><p>Since we merged testing and master on monday, and we'll be releasing einit 0.40.0 /next/ monday, it's now official: We took refuge from sleazy sh scripting and gmake by killing off the ./configure scripts and autogenerated makefiles in favour of.... *drumroll* SCONS. Yeah, actually python is fairly nice for this, I have to admit that. We already converted all of the module repositories and the core repository to scons, and the only thing that is still left in an olden Makefile is the bugger in the documentation/ directory... which needs updating anyway, so we haven't quite touched that yet.</p><p>The cool news about this is, we're now able to bundle a lot of software a lot easier, and we don't have to fuck around with the configure script on each and every new distro. The only things you need right now to compile eINIT on your machine, is a current version of scons, and a current version of gcc. No 'but if you use this distro, you have to patch the configure script because...' -- no, that sucked. The only bad part about this new system is that we haven't quite figured out how crosscompiling works, heh. Not that we really think it ever worked properly in the first place tbh, there's only so much sh that a C programmer can endure ;).</p><p>Oh yeah, the scons build system also allows us more flexibility in autogenerating code and things like that. I was able to write some python code that bundles multiple eINIT modules together into a single .so file, which we already put to good use in the -git version. This saves on memory usage and on a couple other things. It be good, yarr. I hope to apply this technique to generate C code from the .xml configuration files and the .xml/sh modules, in order to save even more (memory|cpu power|kittens).</p><p>Mkay, that's it for this update from the front. Let's get back to t3h hackin.</p></body></html></content><category term="Blog Post"/><category term="einit.org"/></entry>


<entry><title>eINIT Core 0.40.0</title><updated>2008-04-13T13:52:52Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::102:102</id><summary>Okay this release pretty much turns everything upside down. We'll prepare a list with differences later today or tomorrow, but the really important changes are:...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>eINIT Core 0.40.0</title><meta name="date" content="2008-04-13T13:52:52Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-04-13T13:52:52Z"/><meta name="unix:name" content="einit:einit-core-0.40.0"/><meta name="description" content="Okay this release pretty much turns everything upside down. We'll prepare a list with differences later today or tomorrow, but the really important changes are:..."/><meta name="category" content="Project Release"/></head><body><p>Okay this release pretty much turns everything upside down. We'll prepare a list with differences later today or tomorrow, but the really important changes are:</p><ul><li>no more einit-control/erc/power! use einit --help to get new commands</li><li>we actually made man pages (!!) for einit, einit-feedback, einit-log and einit-sysvd. read them :D</li><li>the ipc subsystem changed considerably from sockets and dbus to a plan9 virtual filesystem. this is funkeh.</li><li>aforementioned ipc change allows any user (in the 'einit'-group) to get einit feedback data via einit-feedback or einit-log.</li></ul><p>more release notes later.</p></body></html></content><category term="Project Release"/><category term="einit.org"/></entry>
<entry><title>eINIT XML/sh Modules 2.0.0.0</title><updated>2008-04-13T13:52:48Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::103:103</id><summary>Updated modules. Since we switched to the scons build system, this package also includes the modules-xml.c file which is needed to make these modules tick. The ...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>eINIT XML/sh Modules 2.0.0.0</title><meta name="date" content="2008-04-13T13:52:48Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-04-13T13:52:48Z"/><meta name="unix:name" content="einit:einit-xml-sh-modules-2.0.0.0"/><meta name="description" content="Updated modules. Since we switched to the scons build system, this package also includes the modules-xml.c file which is needed to make these modules tick. The ..."/><meta name="category" content="Project Release"/></head><body><p>Updated modules. Since we switched to the scons build system, this package also includes the modules-xml.c file which is needed to make these modules tick.</p><p>The version numbering has changed. 'twas creidiki's idea. ;)</p></body></html></content><category term="Project Release"/><category term="einit.org"/></entry>
<entry><title>eINIT Scheme Modules 1.0.0.0</title><updated>2008-02-28T15:00:40Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::104:104</id><summary>finally a release with the scheme modules. wheee :D.</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>eINIT Scheme Modules 1.0.0.0</title><meta name="date" content="2008-02-28T15:00:40Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-02-28T15:00:40Z"/><meta name="unix:name" content="einit:einit-scheme-modules-1.0.0.0"/><meta name="description" content="finally a release with the scheme modules. wheee :D."/><meta name="category" content="Project Release"/></head><body><p>finally a release with the scheme modules. wheee :D.</p></body></html></content><category term="Project Release"/><category term="einit.org"/></entry>
<entry><title>Migration Guide, 0.25.x series to 0.40.0</title><updated>2008-02-27T12:04:38Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::105:105</id><summary>New Features - Ability to mount eINIT's IPC subsystem. - /sbin/einit (symlinked as /bin/einit) is now used to tame einit and tell it what it should do - manpage...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Migration Guide, 0.25.x series to 0.40.0</title><meta name="date" content="2008-02-27T12:04:38Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-02-27T12:04:38Z"/><meta name="unix:name" content="einit:migration-guide,-0.25.x-series-to-0.40.0"/><meta name="description" content="New Features - Ability to mount eINIT's IPC subsystem. - /sbin/einit (symlinked as /bin/einit) is now used to tame einit and tell it what it should do - manpage..."/><meta name="category" content="Page"/></head><body><h1>New Features</h1><ul><li>Ability to mount eINIT's IPC subsystem.</li><li>/sbin/einit (symlinked as /bin/einit) is now used to tame einit and tell it what it should do</li><li>manpages, updated .html documentation (see 'core documentation')</li></ul><h1>Modified Features</h1><ul><li>IPC subsystem changed from sockets/dbus to 9p2000(.u)</li><li>Network V1 turned into Network V2, needs reconfiguration since the old config format died with V1.</li></ul><h1>Fixes (partial list)</h1><ul><li>udev support has been enhanced</li></ul><h1>Things that we scrapped but which will be back</h1><ul><li>aural feedback</li><li>splash support (fbsplash, psplash, usplash, exquisite)</li></ul><h1>Things that got scrapped for good</h1><ul><li>mortality settings in the core</li><li>dbus IPC support (this does NOT affect einit's ability to run the dbus daemon)</li><li>einit-control, erc, power</li></ul></body></html></content><category term="Page"/><category term="einit.org"/></entry>

<entry><title>eINIT Scheme Modules 1.0.0.1</title><updated>2008-03-01T00:53:03Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::107:107</id><summary>This fixes some annoyances with alsa and nfs. It also adds a number of workarounds for a few segmentation faults in libguile.</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>eINIT Scheme Modules 1.0.0.1</title><meta name="date" content="2008-03-01T00:53:03Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-03-01T00:53:03Z"/><meta name="unix:name" content="einit:einit-scheme-modules-1.0.0.1"/><meta name="description" content="This fixes some annoyances with alsa and nfs. It also adds a number of workarounds for a few segmentation faults in libguile."/><meta name="category" content="Project Release"/></head><body><p>This fixes some annoyances with alsa and nfs. It also adds a number of workarounds for a few segmentation faults in libguile.</p></body></html></content><category term="Project Release"/><category term="einit.org"/></entry>

<entry><title>eINIT Scheme Modules 1.0.0.2</title><updated>2008-04-13T13:52:42Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::109:109</id><summary>segfault fixiness</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>eINIT Scheme Modules 1.0.0.2</title><meta name="date" content="2008-04-13T13:52:42Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-04-13T13:52:42Z"/><meta name="unix:name" content="einit:einit-scheme-modules-1.0.0.2"/><meta name="description" content="segfault fixiness"/><meta name="category" content="Project Release"/></head><body><p>segfault fixiness</p></body></html></content><category term="Project Release"/><category term="einit.org"/></entry>


<entry><title>Arch Bootcharts: einit vs. sysvinit</title><updated>2008-03-07T20:26:52Z</updated><author><name>morphir</name><email>ombinde@gmail.org</email></author><id>drupal:drupal-einit::112:112</id><summary>I did a little comparison just for the record of it. Read it and leak saltwater!</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Arch Bootcharts: einit vs. sysvinit</title><meta name="date" content="2008-03-07T20:26:52Z"/><meta name="author" content="morphir"/><meta name="mtime" content="2008-03-07T20:26:52Z"/><meta name="unix:name" content="einit:arch-bootcharts:-einit-vs.-sysvinit"/><meta name="description" content="I did a little comparison just for the record of it. Read it and leak saltwater!"/><meta name="category" content="Blog Post"/></head><body><p>I did a little comparison just for the record of it. Read it and leak saltwater!</p></body></html></content><category term="Blog Post"/><category term="einit.org"/></entry>
<entry><title>Bootdrag is on! 15 seconds</title><updated>2008-03-06T18:35:50Z</updated><author><name>morphir</name><email>ombinde@gmail.org</email></author><id>drupal:drupal-einit::113:113</id><summary>Tonight Magnus (jyujin) gave us a bootchart that pushed the limits yet again. We let the bootchart talk for it self. (And more people are buckling up to beat it...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Bootdrag is on! 15 seconds</title><meta name="date" content="2008-03-06T18:35:50Z"/><meta name="author" content="morphir"/><meta name="mtime" content="2008-03-06T18:35:50Z"/><meta name="unix:name" content="einit:bootdrag-is-on-15-seconds"/><meta name="description" content="Tonight Magnus (jyujin) gave us a bootchart that pushed the limits yet again. We let the bootchart talk for it self. (And more people are buckling up to beat it..."/><meta name="category" content="Blog Post"/></head><body><p>Tonight Magnus (jyujin) gave us a bootchart that pushed the limits yet again. We let the bootchart talk for it self. (And more people are buckling up to beat it)</p><p>http://omploader.org/vZHdj</p><p>&lt;center&gt;&lt;img src="http://einit.org/files/10seclappy-ng.png"/&gt;&lt;/center&gt; &lt;center&gt;We are getting closer to the dream!&lt;/center&gt;</p></body></html></content><category term="Blog Post"/><category term="einit.org"/></entry>


<entry><title>einit video - by p13</title><updated>2008-03-05T01:37:32Z</updated><author><name>morphir</name><email>ombinde@gmail.org</email></author><id>drupal:drupal-einit::116:116</id><summary>object type"application/x-shockwave-flash" data"http://video.google.com/googleplayer.swf?&amp;videoUrlhttp%3A%2F%2Fvp.video.google.com%2Fvideodownload%3Fversion%3D0...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>einit video - by p13</title><meta name="date" content="2008-03-05T01:37:32Z"/><meta name="author" content="morphir"/><meta name="mtime" content="2008-03-05T01:37:32Z"/><meta name="unix:name" content="einit:einit-video---by-p13"/><meta name="description" content="object type&quot;application/x-shockwave-flash&quot; data&quot;http://video.google.com/googleplayer.swf?&amp;videoUrlhttp%3A%2F%2Fvp.video.google.com%2Fvideodownload%3Fversion%3D0..."/><meta name="category" content="Blog Post"/></head><body><p>&lt;object type="application/x-shockwave-flash" data="http://video.google.com/googleplayer.swf?&amp;videoUrl=http%3A%2F%2Fvp.video.google.com%2Fvideodownload%3Fversion%3D0%26secureurl%3DqgAAADVqY3SVlt4-VG1vdIFsdhi4RaT5QItxD190MsllNxJLakp7jiokxWaU9HIhh-fqUhjyCC69w5t683g1Uxt9sPFsdF_yyruX7Ojnu3YoPik4p53ZEiFd3qmP58PoIDghvUcRmHENJfzlEz5PW4YFfz7qwyyZ3CKI4wTGAOnxnwzCqM1bbkI-DwohJIe9MMwPaoxQhMhZJ61PIm7fwJSb2FQXSEzqQWGjTyXal9QWMQuA%26sigh%3DfXAnkUL5PGecaKlnNOs43_kSIR0%26begin%3D0%26len%3D31667%26docid%3D9063057500481406265&amp;thumbnailUrl=http%3A%2F%2Fvideo.google.com%2FThumbnailServer2%3Fapp%3Dvss%26contentid%3Dcebebfdc535c4771%26offsetms%3D5000%26itag%3Dw320%26lang%3Den%26sigh%3DaSduWpny3C3nWF5uegCfU81O_6s" width="400" height="326"&gt;&lt;param name="movie" value="http://video.google.com/googleplayer.swf?&amp;videoUrl=http%3A%2F%2Fvp.video.google.com%2Fvideodownload%3Fversion%3D0%26secureurl%3DqgAAADVqY3SVlt4-VG1vdIFsdhi4RaT5QItxD190MsllNxJLakp7jiokxWaU9HIhh-fqUhjyCC69w5t683g1Uxt9sPFsdF_yyruX7Ojnu3YoPik4p53ZEiFd3qmP58PoIDghvUcRmHENJfzlEz5PW4YFfz7qwyyZ3CKI4wTGAOnxnwzCqM1bbkI-DwohJIe9MMwPaoxQhMhZJ61PIm7fwJSb2FQXSEzqQWGjTyXal9QWMQuA%26sigh%3DfXAnkUL5PGecaKlnNOs43_kSIR0%26begin%3D0%26len%3D31667%26docid%3D9063057500481406265&amp;thumbnailUrl=http%3A%2F%2Fvideo.google.com%2FThumbnailServer2%3Fapp%3Dvss%26contentid%3Dcebebfdc535c4771%26offsetms%3D5000%26itag%3Dw320%26lang%3Den%26sigh%3DaSduWpny3C3nWF5uegCfU81O_6s" /&gt;&lt;param name="FlashVars" value="playerMode=embedded" /&gt;&lt;/object&gt;</p></body></html></content><category term="Blog Post"/><category term="einit.org"/></entry>

<entry><title>The Boot Process (analysis)</title><updated>2008-03-06T00:48:23Z</updated><author><name>morphir</name><email>ombinde@gmail.org</email></author><id>drupal:drupal-einit::118:118</id><summary>In computing, booting (booting up) is a bootstrapping process that starts operating systems when the user turns on a computer system. A boot sequence is the set...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>The Boot Process (analysis)</title><meta name="date" content="2008-03-06T00:48:23Z"/><meta name="author" content="morphir"/><meta name="mtime" content="2008-03-06T00:48:23Z"/><meta name="unix:name" content="einit:the-boot-process-analysis"/><meta name="description" content="In computing, booting (booting up) is a bootstrapping process that starts operating systems when the user turns on a computer system. A boot sequence is the set..."/><meta name="category" content="Book"/></head><body><p>In computing, booting (booting up) is a bootstrapping process that starts operating systems when the user turns on a computer system. A boot sequence is the set of operations the computer performs when it is switched on that loads an operating system. The boot process is defined in this chronological order (for unix-like systems):</p></body></html></content><category term="Book"/><category term="einit.org"/></entry>
<entry><title>Bios</title><updated>2008-03-06T00:50:35Z</updated><author><name>morphir</name><email>ombinde@gmail.org</email></author><id>drupal:drupal-einit::119:119</id><summary>The bios is located on a chip on your motherboard. They are traditionally proprietary (closed source), and thus there are little we can do to make them boot up ...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Bios</title><meta name="date" content="2008-03-06T00:50:35Z"/><meta name="author" content="morphir"/><meta name="mtime" content="2008-03-06T00:50:35Z"/><meta name="unix:name" content="einit:bios"/><meta name="description" content="The bios is located on a chip on your motherboard. They are traditionally proprietary (closed source), and thus there are little we can do to make them boot up ..."/><meta name="category" content="Book"/></head><body><p>The bios is located on a chip on your motherboard. They are traditionally proprietary (closed source), and thus there are little we can do to make them boot up faster. You can however replace your proprietary bios with Coreboot (formerly LinuxBIOS), but it's not given that your motherboard will be supported.</p><p>References: http://www.coreboot.org/</p></body></html></content><category term="Book"/><category term="einit.org"/></entry>
<entry><title>Bootloader</title><updated>2008-03-06T00:54:32Z</updated><author><name>morphir</name><email>ombinde@gmail.org</email></author><id>drupal:drupal-einit::120:120</id><summary>The bootloader is a application that initiates your operating system. Whether that be Linux, BSD or Windows. It's main purpose is to specify a path to where you...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Bootloader</title><meta name="date" content="2008-03-06T00:54:32Z"/><meta name="author" content="morphir"/><meta name="mtime" content="2008-03-06T00:54:32Z"/><meta name="unix:name" content="einit:bootloader"/><meta name="description" content="The bootloader is a application that initiates your operating system. Whether that be Linux, BSD or Windows. It's main purpose is to specify a path to where you..."/><meta name="category" content="Book"/></head><body><p>The bootloader is a application that initiates your operating system. Whether that be Linux, BSD or Windows. It's main purpose is to specify a path to where your bootloader can find the operating system's kernel. On Linux the bootloader is also (traditionally) the place where you specify if the boot process should have graphical boot (splash image) or not. With a decent bootloader (like Grub) you will have the option to perform what is known as 'Dual boot'.</p><p>References: http://www.gnu.org/software/grub/</p></body></html></content><category term="Book"/><category term="einit.org"/></entry>
<entry><title>Kernel</title><updated>2008-03-10T00:35:26Z</updated><author><name>morphir</name><email>ombinde@gmail.org</email></author><id>drupal:drupal-einit::121:121</id><summary>The kernel allocates and initiates all of your hardware, like cpu, memory, graphics card etc. The kernel takes about roughly 6 seconds to boot up, but can be sp...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Kernel</title><meta name="date" content="2008-03-10T00:35:26Z"/><meta name="author" content="morphir"/><meta name="mtime" content="2008-03-10T00:35:26Z"/><meta name="unix:name" content="einit:kernel"/><meta name="description" content="The kernel allocates and initiates all of your hardware, like cpu, memory, graphics card etc. The kernel takes about roughly 6 seconds to boot up, but can be sp..."/><meta name="category" content="Book"/></head><body><p>The kernel allocates and initiates all of your hardware, like cpu, memory, graphics card etc. The kernel takes about roughly 6 seconds to boot up, but can be speed up by modularizing the kernel. Approximately shortening the boot time with about 1-4 seconds.</p><p>What is "modularizing"? &lt;blockquote&gt; when you use kernel modules you are, well, modularizing your kernel. For instance, say some developers want to have a general kernel that works with as many different computers as possible (as most distro developers do). There are dozens of drivers in the kernel for network cards alone. It doesn't make sense to have all of them compiled into the kernel because you usually only need one or maybe two of them for a particular machine. So the developers make all of the different drivers modules. Computer A might require the 8139too driver, so module driver is loaded and the rest are not. Computer B might require the tulip driver, not the 8139too driver...so the the tulip module is loaded and the rest are not. Of course, when you get into all the possible devices that have drivers in the kernel, if you compiled everything in you'd end up with quite a massive, bloated kernel. &lt;/blockquote&gt;</p><p>http://ubuntuforums.org/showpost.php?p=359114&amp;postcount=2</p><p>You can see what modules are supported for your kernel by typing</p><code>modprobe -l</code><p>And I suggest putting that in a file like this:</p><code>modprobe -l &gt; all-kernel-modules</code><p>If you have a generic kernel, this list will usually be quite long.</p></body></html></content><category term="Book"/><category term="einit.org"/></entry>
<entry><title>Init</title><updated>2008-03-11T18:28:49Z</updated><author><name>morphir</name><email>ombinde@gmail.org</email></author><id>drupal:drupal-einit::122:122</id><summary>The init is the last step in the boot process. The init-system initiates (or spawns if you like) all the different processes that are to be run in the userland....</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Init</title><meta name="date" content="2008-03-11T18:28:49Z"/><meta name="author" content="morphir"/><meta name="mtime" content="2008-03-11T18:28:49Z"/><meta name="unix:name" content="einit:init"/><meta name="description" content="The init is the last step in the boot process. The init-system initiates (or spawns if you like) all the different processes that are to be run in the userland...."/><meta name="category" content="Book"/></head><body><p>The init is the last step in the boot process. The init-system initiates (or spawns if you like) all the different processes that are to be run in the userland. Traditionally this is the most timeconsuming process during the bootup of your computer. Init is the parent of all processes, process id 1 (pid 1). The bootup speed depends largly on how many system services you want to have, as they obviously need to be initated before you can use them. These process can be daemons, login manager and applications of different degree and importance. It's important to note that the init system does not deal with any kernel related stuff (like modules &amp; drivers), however it does deal with reboot and halt(shutdown) commands.</p><p>What einit does differently is: &lt;fill in the blanks&gt;</p></body></html></content><category term="Book"/><category term="einit.org"/></entry>
<entry><title>BIOS boots to Linux in one second</title><updated>2008-03-11T22:12:28Z</updated><author><name>morphir</name><email>ombinde@gmail.org</email></author><id>drupal:drupal-einit::123:123</id><summary>Although the bios does not directly got anything to do with einit - the bios is still a key part of the booting process. So this is a good read for you speed ju...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>BIOS boots to Linux in one second</title><meta name="date" content="2008-03-11T22:12:28Z"/><meta name="author" content="morphir"/><meta name="mtime" content="2008-03-11T22:12:28Z"/><meta name="unix:name" content="einit:bios-boots-to-linux-in-one-second"/><meta name="description" content="Although the bios does not directly got anything to do with einit - the bios is still a key part of the booting process. So this is a good read for you speed ju..."/><meta name="category" content="Blog Post"/></head><body><p>Although the bios does not directly got anything to do with einit - the bios is still a key part of the booting process. So this is a good read for you speed junkies. &lt;blockquote&gt; Firmware company General Software announced that it is selling customized, quick-booting versions of its Linux-compatible BIOS firmware to the medical device industry. The company says its "Embedded BIOS with StrongFrame Technology" can boot to lilo (Linux loader) in less than a second.</p><p>Fast boot times are key in the medical device market, where products compete on "time to waveform" (TTW), General Software said. Yet, most BIOSes available for x86 chipsets were built for the desktop market, and thus have not been optimized in this area, according to Steve Jones, General Software CTO.</p><p>Jones explained, "Hard drive spin-up normally takes so long that the BIOS has to wait for it anyway. Take away the spin-up time and you're left with POST that should complete in hundreds of milliseconds, but instead takes tens of seconds."</p><p>Jones said that after hard drive spin-up delays, waiting for video card firmware to load is another major time-waster. "Depending on the video controller, it can take between 0.5 and 5 seconds, typically. Next to hard drive spin-up, this is actually the most significant part of POST and accounts for most of the time spent in the one-second measurement here. Other things, like keyboard controller initialization, mouse and keyboard device initialization, and USB initialization, all take hundreds of microseconds, and basically nickel-and-dime the POST time."</p><p>Jones said the claimed sub-second boot time to lilo was measured between pushing the reset button on a Soyo motherboard with an Intel 815-class chipset, and the moment when the lilo prompt appeared, showing that the drive was being read. Jones says the feat was accomplished by using "Quick Boot" tuning tools available in the General Software Embedded BIOS Adaptation Kit, which is said to offer more than 1,000 configuration options at the source level. Using it, General Software or Kit licensees can tune x86 BIOS code to specific hardware, eliminating the time-consuming scans and unneeded code branches found in desktop x86 BIOS code. Another touted benefit is faster certification, since there are fewer code-paths to test.</p><p>Jones said General Software also created one BIOS capable of booting Windows Vista to a usable desktop in 24 seconds, where the same board with a traditional BIOS took 72 seconds. Much of the speed-up was attributed to building a UDMA-capable driver into the BIOS, enabling it to load the OS into memory much faster than traditional BIOSes, which use slow PIO (programmed I/O) data transfers.</p><p>General Software said its medical device customers include Siemens Acuson and GE Healthcare.</p><p>Availability</p><p>Embedded BIOS with StrongFrame Technology is available now for a wide variety of devices, including medical equipment. &lt;/blockquote&gt;</p><p>source: http://www.linuxdevices.com/news/NS5429881813.html Here you can learn more about &lt;a href="http://einit.org/node/119"&gt;the bios here&lt;/a&gt;.</p></body></html></content><category term="Blog Post"/><category term="einit.org"/></entry>


<entry><title>Bootchart log</title><updated>2008-03-17T19:27:17Z</updated><author><name>morphir</name><email>ombinde@gmail.org</email></author><id>drupal:drupal-einit::126:126</id><summary>I am updating you guys with a new bootchart from my arch laptop. Einit is starting up services very fast:)</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Bootchart log</title><meta name="date" content="2008-03-17T19:27:17Z"/><meta name="author" content="morphir"/><meta name="mtime" content="2008-03-17T19:27:17Z"/><meta name="unix:name" content="einit:bootchart-log"/><meta name="description" content="I am updating you guys with a new bootchart from my arch laptop. Einit is starting up services very fast:)"/><meta name="category" content="Blog Post"/></head><body><p>I am updating you guys with a new bootchart from my arch laptop. Einit is starting up services very fast:)</p></body></html></content><category term="Blog Post"/><category term="einit.org"/></entry>






<entry><title>Ludicrous speed!</title><updated>2008-03-25T20:59:52Z</updated><author><name>Leonardo Valeri Manera</name><email>lvalerimanera@gmail.com</email></author><id>drupal:drupal-einit::133:133</id><summary>Squeaky came in the channel this morning. Needed help getting eINIT up and running. This evening he posted this rather impressive bootchart + video combo ... se...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Ludicrous speed!</title><meta name="date" content="2008-03-25T20:59:52Z"/><meta name="author" content="Leonardo Valeri Manera"/><meta name="mtime" content="2008-03-25T20:59:52Z"/><meta name="unix:name" content="einit:ludicrous-speed"/><meta name="description" content="Squeaky came in the channel this morning. Needed help getting eINIT up and running. This evening he posted this rather impressive bootchart + video combo ... se..."/><meta name="category" content="Blog Post"/></head><body><p>Squeaky came in the channel this morning. Needed help getting eINIT up and running.</p><p>This evening he posted this rather impressive bootchart + video combo ... see for yourselves. Yes, that's really 10 seconds grub-to-x. TuxonIce, eat your heart out ^_^</p><p>The video is here: http://www.youtube.com/watch?v=W3mZqaxd2kU</p></body></html></content><category term="Blog Post"/><category term="einit.org"/></entry>

<entry><title>einit-systray is on its way</title><updated>2008-04-02T06:36:23Z</updated><author><name>Ryan Hope</name><email>rmh3093@gmail.com</email></author><id>drupal:drupal-einit::135:135</id><summary>in the next week or two the first release of einit-systray will be coming out finished features: disable services reboot/shutdown show event notifications plann...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>einit-systray is on its way</title><meta name="date" content="2008-04-02T06:36:23Z"/><meta name="author" content="Ryan Hope"/><meta name="mtime" content="2008-04-02T06:36:23Z"/><meta name="unix:name" content="einit:einit-systray-is-on-its-way"/><meta name="description" content="in the next week or two the first release of einit-systray will be coming out finished features: disable services reboot/shutdown show event notifications plann..."/><meta name="category" content="Blog Post"/></head><body><p>in the next week or two the first release of einit-systray will be coming out</p><p>finished features: disable services reboot/shutdown show event notifications</p><p>planned features: enable services update configuration switch modes</p><p>possible features: edit config files</p><p>if you have more feature requests</p></body></html></content><category term="Blog Post"/><category term="einit.org"/></entry>


<entry><title>fbsplash Module [einit-feedbackd-fbsplash]</title><updated>2008-04-05T00:44:51Z</updated><author><name>Joshua Michael Keyes</name><email>stable.entropy@gmail.com</email></author><id>drupal:drupal-einit::138:138</id><summary>I'm starting work on a fbsplash module for einit-feedback, which shouldn't interfere with normal ops. Let's see where this goes shall we? PS: MAGNUS! CODE! INDE...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>fbsplash Module [einit-feedbackd-fbsplash]</title><meta name="date" content="2008-04-05T00:44:51Z"/><meta name="author" content="Joshua Michael Keyes"/><meta name="mtime" content="2008-04-05T00:44:51Z"/><meta name="unix:name" content="einit:fbsplash-module-einit-feedbackd-fbsplash"/><meta name="description" content="I'm starting work on a fbsplash module for einit-feedback, which shouldn't interfere with normal ops. Let's see where this goes shall we? PS: MAGNUS! CODE! INDE..."/><meta name="category" content="Blog Post"/></head><body><p>I'm starting work on a fbsplash module for einit-feedback, which shouldn't interfere with normal ops. Let's see where this goes shall we?</p><p>PS: MAGNUS! CODE! INDENT! FIX! RAWR!</p></body></html></content><category term="Blog Post"/><category term="einit.org"/></entry>

<entry><title>Systray is back</title><updated>2008-05-17T21:53:36Z</updated><author><name>Joshua Michael Keyes</name><email>stable.entropy@gmail.com</email></author><id>drupal:drupal-einit::140:140</id><summary>I've fixed systray and the repository is filled and an ebuild is in the portage overlay. Changes: - Added "Enable" instead of just "Disable", in the service men...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Systray is back</title><meta name="date" content="2008-05-17T21:53:36Z"/><meta name="author" content="Joshua Michael Keyes"/><meta name="mtime" content="2008-05-17T21:53:36Z"/><meta name="unix:name" content="einit:systray-is-back"/><meta name="description" content="I've fixed systray and the repository is filled and an ebuild is in the portage overlay. Changes: - Added &quot;Enable&quot; instead of just &quot;Disable&quot;, in the service men..."/><meta name="category" content="Blog Post"/></head><body><p>I've fixed systray and the repository is filled and an ebuild is in the portage overlay. Changes: - Added "Enable" instead of just "Disable", in the service menu. - Stripped out the libnotify and pthreads crap, as it was causing some nasty infinite loops and just generally being a nuisance. - Fixed a segfault error and a few NULL pointer issues. - Made the entire codebase c99 safe. - Switch to malloc/free instead of dynamic arrays. =)</p><p>I hope to add libnotify stuff later on, and perhaps make a secondary frontend for libnotify stuff.</p></body></html></content><category term="Blog Post"/><category term="einit.org"/></entry>

<entry><title>To X in 7 seconds. =)</title><updated>2008-05-18T03:18:06Z</updated><author><name>Joshua Michael Keyes</name><email>stable.entropy@gmail.com</email></author><id>drupal:drupal-einit::142:142</id><summary>That's right. Check it out.</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>To X in 7 seconds. =)</title><meta name="date" content="2008-05-18T03:18:06Z"/><meta name="author" content="Joshua Michael Keyes"/><meta name="mtime" content="2008-05-18T03:18:06Z"/><meta name="unix:name" content="einit:to-x-in-7-seconds."/><meta name="description" content="That's right. Check it out."/><meta name="category" content="Blog Post"/></head><body><p>That's right. Check it out.</p></body></html></content><category term="Blog Post"/><category term="einit.org"/></entry>



<entry><title>Move along...</title><updated>2008-09-16T00:18:34Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::146:146</id><summary>... basically einit has been abandoned and we're prepping up a successor called 'kyuba'. Head over to http://kyuba.org for details and updates. BTW, you can sti...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Move along...</title><meta name="date" content="2008-09-16T00:18:34Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2008-09-16T00:18:34Z"/><meta name="unix:name" content="einit:move-along..."/><meta name="description" content="... basically einit has been abandoned and we're prepping up a successor called 'kyuba'. Head over to http://kyuba.org for details and updates. BTW, you can sti..."/><meta name="category" content="Blog Post"/></head><body><p>... basically einit has been abandoned and we're prepping up a successor called 'kyuba'. Head over to http://kyuba.org for details and updates. BTW, you can still download einit, or even einit's git versions. Also einit and kyuba share the same git server... but no codebase.</p></body></html></content><category term="Blog Post"/><category term="einit.org"/></entry>








<entry><title>So eINIT is still finding some use... :)</title><updated>2009-01-30T00:55:53Z</updated><author><name>Magnus Achim Deininger</name><email>dma05@web.de</email></author><id>drupal:drupal-einit::155:155</id><summary>_TPG joined #einit today and pointed me to this: http://svn.mandriva.com/cgi-bin/viewvc.cgi/packages/cooker/einit/current/SOURCES/ . looks like things are being...</summary><content type="application/xhtml+xml"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>So eINIT is still finding some use... :)</title><meta name="date" content="2009-01-30T00:55:53Z"/><meta name="author" content="Magnus Achim Deininger"/><meta name="mtime" content="2009-01-30T00:55:53Z"/><meta name="unix:name" content="einit:so-einit-is-still-finding-some-use...-:"/><meta name="description" content="_TPG joined #einit today and pointed me to this: http://svn.mandriva.com/cgi-bin/viewvc.cgi/packages/cooker/einit/current/SOURCES/ . looks like things are being..."/><meta name="category" content="Blog Post"/></head><body><p>_TPG joined #einit today and pointed me to this: http://svn.mandriva.com/cgi-bin/viewvc.cgi/packages/cooker/einit/current/SOURCES/ . looks like things are being put to use after all ;). go _TPG :).</p></body></html></content><category term="Blog Post"/><category term="einit.org"/></entry>


</feed>
