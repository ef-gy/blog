# This is the configuration file for http://ef.gy/
# Evidently, this server is running nginx with the native XSLT processor.

map $request_uri $collection {
  ~^(.*)/([^@]+)@(?<co>[^@]+)$ $co;
  ~^(.*)/(?<co>[^@]+)$ $co;
}

map $request_uri $target {
  ~^(.*)/(?<ta>[^@]+)@([^@]+)$ $ta;
}

map $http_host $preferredScheme {
  default  "http";
  ~^ef.gy$ "https";
}

ssl_session_cache   shared:SSL:10m;
ssl_session_timeout 10m;

server {
    listen 80;
    listen [::]:80;

    keepalive_timeout   70;

    server_name *.ef.gy;

    return 301 https://ef.gy$request_uri;
}

server {
    listen 80 default;
    listen [::]:80 default;
    listen 443 ssl spdy;
    listen [::]:443 ssl spdy;

    keepalive_timeout   70;

    server_name ef.gy;
    server_name vturtipc7vmz6xjy.onion;

    ssl_certificate     /srv/certificates/ef.gy/ef.gy.crt;
    ssl_certificate_key /srv/certificates/ef.gy/ef.gy.key;

    gzip            on;
    gzip_min_length 1000;
    gzip_proxied    expired no-cache no-store private auth;
    gzip_types      text/plain application/xml text/css text/html application/xhtml+xml application/javascript text/javascript;

    add_header Vary Accept;

    add_header Content-Security-Policy "default-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval' platform.twitter.com efgy.disqus.com go.disqus.com c328740.ssl.cf1.rackcdn.com connect.facebook.net apis.google.com; frame-src 'self' platform.twitter.com disqus.com www.youtube.com *.facebook.com *.google.com; img-src 'self' 'unsafe-inline' *.disqus.com *.disquscdn.com c328740.ssl.cf1.rackcdn.com; font-src c328740.ssl.cf1.rackcdn.com";

    access_log  /var/log/nginx/ef.gy.access.log;

    xslt_types application/xhtml+xml application/atom+xml image/svg+xml;

    set $documentRoot /srv/http/ef.gy;

    root $documentRoot;
 
    xslt_string_param target $target;
    xslt_string_param collection $collection;
    xslt_string_param documentRoot $documentRoot;
    xslt_string_param userAgent $http_user_agent;
    xslt_string_param baseURI '$preferredScheme://$http_host';
    xslt_string_param disqusShortname 'efgy';

    if ($preferredScheme != $scheme)
    {
        return 301 $preferredScheme://$http_host$request_uri;
    }

    if ($request_uri ~ \?.*$ )
    {
        rewrite ^/(.*)$ /$1? permanent;
    }
    if ($request_uri ~ ^/x?html/ )
    {
        rewrite ^/x?html/(.*)$ /$1 permanent;
    }

    rewrite ^/documentation/libefgy/?$ /documentation/libefgy/index.xhtml redirect;
    rewrite ^/documentation/topologic/?$ /documentation/topologic/index.xhtml redirect;
    rewrite ^/documentation/bourne\+\+/?$ /documentation/bourne++/index.xhtml redirect;
    rewrite ^/documentation/libcurie/?$ /documentation/curie/index.xhtml redirect;
    rewrite ^/documentation/curie/?$ /documentation/curie/index.xhtml redirect;
    rewrite ^/documentation/duat/?$ /documentation/duat/index.xhtml redirect;
    rewrite ^/documentation/dev9/?$ /documentation/dev9/index.xhtml redirect;
    rewrite ^/documentation/metaquest/?$ /documentation/metaquest/index.xhtml redirect;
    rewrite ^/documentation/verthandi/?$ /documentation/verthandi/index.xhtml redirect;

    rewrite ^(.*)/(kyuba:[^@]+)@([^@]*archives)$ $1/$2@drupal-kyuba permanent;
    rewrite ^(.*)/(einit:[^@]+)@([^@]*archives)$ $1/$2@drupal-einit permanent;
    rewrite ^(.*)/([^@]+)@([^@]+)$ $1/$3;
    rewrite ^/source-code$ /about#source-code permanent;

    location = /robots.txt {
    }
    location = /favicon.ico {
        types { image/svg+xml ico; }
    }
    location = /sitemap.xml {
		xslt_stylesheet /srv/http/ef.gy/xslt/atom-merge.xslt;
		xslt_stylesheet /srv/http/ef.gy/xslt/atom-style-ef.gy.xslt;
		xslt_stylesheet /srv/http/ef.gy/xslt/sitemap-transcode-atom.xslt;
    }

	location / {
        if ($uri ~ ^/\.git)
        {
            break;
        }

        rewrite ^/$ /site permanent;

        # Google+ seems to choke on XHTML
		if ($http_user_agent ~* Google)
		{
			rewrite ^(.*)$ /html$1 last;
		}
		if ($http_accept ~* application/xhtml\+xml)
		{
			rewrite ^(.*)$ /xhtml$1 last;
		}

		rewrite ^(.*)$ /html$1 last;
	}

    location /include/ef.gy {
        rewrite ^/(.*) https://github.com/ef-gy/libefgy/tree/master$1 redirect;
    }

	location /.git {
        error_page 403 /source-code;
	}

	location /css {
		try_files $uri.minified.css $uri.css $uri =404;

                expires 1h;
                add_header Pragma public;
                add_header Cache-Control "public";
	}

	location /png {
		try_files $uri.png $uri =404;

                expires 1h;
                add_header Pragma public;
                add_header Cache-Control "public";
	}

	location /jpeg {
		try_files $uri.jpeg $uri.jpg $uri =404;

                expires 1h;
                add_header Pragma public;
                add_header Cache-Control "public";
	}

	location /pdf {
		try_files $uri.pdf $uri =404;

                expires 1h;
                add_header Pragma public;
                add_header Cache-Control "public";
	}

	location /mobi {
		try_files $uri.mobi $uri =404;
        types { application/x-mobipocket-ebook mobi; }

                expires 1h;
                add_header Pragma public;
                add_header Cache-Control "public";
    }

	location /epub {
		try_files $uri.mobi $uri =404;
        types { application/epub+zip epub; }

                expires 1h;
                add_header Pragma public;
                add_header Cache-Control "public";
    }

	location /js {
		try_files $uri.js $uri =404;

                expires 1h;
                add_header Pragma public;
                add_header Cache-Control "public";
	}

	location /atom {
        alias $documentRoot;
		try_files $uri.atom $uri =404;

		xslt_stylesheet /srv/http/ef.gy/xslt/atom-merge.xslt;
		xslt_stylesheet /srv/http/ef.gy/xslt/xhtml-pre-process.xslt;
		xslt_stylesheet /srv/http/ef.gy/xslt/atom-style-ef.gy.xslt;

                expires 1h;
                add_header Pragma public;
                add_header Cache-Control "public";
	}

	location /rss {
        alias $documentRoot;
		try_files $uri.atom $uri =404;

		xslt_stylesheet /srv/http/ef.gy/xslt/atom-merge.xslt;
		xslt_stylesheet /srv/http/ef.gy/xslt/xhtml-pre-process.xslt;
		xslt_stylesheet /srv/http/ef.gy/xslt/atom-style-ef.gy.xslt;
		xslt_stylesheet /srv/http/ef.gy/xslt/rss-transcode-atom.xslt;

                expires 1h;
                add_header Pragma public;
                add_header Cache-Control "public";
	}

	location /docbook {
        alias $documentRoot;
		try_files $uri.atom $uri.xhtml $uri =404;

		xslt_stylesheet /srv/http/ef.gy/xslt/atom-merge.xslt;
		xslt_stylesheet /srv/http/ef.gy/xslt/xhtml-pre-process.xslt;
		xslt_stylesheet /srv/http/ef.gy/xslt/docbook-transcode-xhtml.xslt;
		xslt_stylesheet /srv/http/ef.gy/xslt/docbook-transcode-atom.xslt;

                expires 1h;
                add_header Pragma public;
                add_header Cache-Control "public";
	}

	location /raw {
        alias $documentRoot;
		try_files $uri =404;
	}

	location /svg {
        alias $documentRoot;
		try_files $uri.svg $uri =404;

		xslt_stylesheet /srv/http/ef.gy/xslt/svg-style-ef.gy.xslt;
	}

	location /xhtml {
        alias $documentRoot;
		try_files $uri.xhtml $uri.atom $uri =404;

		xslt_stylesheet /srv/http/ef.gy/xslt/atom-merge.xslt;
		xslt_stylesheet /srv/http/ef.gy/xslt/xhtml-pre-process.xslt;
		xslt_stylesheet /srv/http/ef.gy/xslt/xhtml-transcode-atom.xslt;
		xslt_stylesheet /srv/http/ef.gy/xslt/xhtml-style-ef.gy.xslt;
		xslt_stylesheet /srv/http/ef.gy/xslt/xhtml-navigation.xslt;
	}

	location /html {
        alias $documentRoot;
		try_files $uri.xhtml $uri.atom $uri =404;

		xslt_stylesheet /srv/http/ef.gy/xslt/atom-merge.xslt;
		xslt_stylesheet /srv/http/ef.gy/xslt/xhtml-pre-process.xslt;
		xslt_stylesheet /srv/http/ef.gy/xslt/xhtml-transcode-atom.xslt;
		xslt_stylesheet /srv/http/ef.gy/xslt/xhtml-style-ef.gy.xslt;
		xslt_stylesheet /srv/http/ef.gy/xslt/xhtml-navigation.xslt;
		xslt_stylesheet /srv/http/ef.gy/xslt/html-post-process.xslt;
	}

    location /documentation/ {
        xslt_types application/xhtml+xml application/xml;

        xslt_stylesheet /srv/http/ef.gy/xslt/xhtml-documentation-post-process.xslt;
    }
}
